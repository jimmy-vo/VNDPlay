<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\SENSE.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\SENSE.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5.03 [Build 76]: Last Updated: Fri Sep 18 09:02:58 2015
<BR><P>
<H3>Maximum Stack Usage =        648 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; Main_Window &rArr; Main_ButtonProcess &rArr; Main_ButtonEvent &rArr; Snake_Window &rArr; Snake_ButtonProcess &rArr; Snake_ButtonEvent &rArr; Snake_Render &rArr; Snake_ProcessTilt &rArr; IMU_Process &rArr; IMU_ChangeFreq &rArr; IMUWindow_ErrorConfirm &rArr; IMUWindow_Render &rArr; IMUWindow_RenderData &rArr; IMU_FixAngle &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[a7]">Sudoku_RecursiveRandom</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a7]">Sudoku_RecursiveRandom</a><BR>
 <LI><a href="#[be]">Snake_UpdateSnake</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[be]">Snake_UpdateSnake</a><BR>
 <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[6]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SVC_Handler</a><BR>
 <LI><a href="#[7]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMon_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[1c]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[1e]">CAN1_RX0_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[1f]">CAN1_RX1_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[20]">CAN1_SCE_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[1d]">CAN1_TX_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[4a]">CAN2_RX0_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[4b]">CAN2_RX1_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[4c]">CAN2_SCE_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[49]">CAN2_TX_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[59]">CRYP_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[58]">DCMI_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[15]">DMA1_Stream0_IRQHandler</a> from dev_i2c.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[16]">DMA1_Stream1_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[17]">DMA1_Stream2_IRQHandler</a> from dev_i2c.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[18]">DMA1_Stream3_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[19]">DMA1_Stream4_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[1a]">DMA1_Stream5_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[1b]">DMA1_Stream6_IRQHandler</a> from dev_i2c.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[39]">DMA1_Stream7_IRQHandler</a> from dev_i2c.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[42]">DMA2_Stream0_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[43]">DMA2_Stream1_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[44]">DMA2_Stream2_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[45]">DMA2_Stream3_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[46]">DMA2_Stream4_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[4e]">DMA2_Stream5_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[4f]">DMA2_Stream6_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[50]">DMA2_Stream7_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[47]">ETH_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[48]">ETH_WKUP_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[32]">EXTI15_10_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[5b]">FPU_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[3a]">FSMC_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[5a]">HASH_RNG_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[2a]">I2C1_ER_IRQHandler</a> from dev_i2c.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[29]">I2C1_EV_IRQHandler</a> from dev_i2c.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[2c]">I2C2_ER_IRQHandler</a> from dev_i2c.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[2b]">I2C2_EV_IRQHandler</a> from dev_i2c.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[53]">I2C3_ER_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[52]">I2C3_EV_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[4d]">OTG_FS_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[34]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[55]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[54]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[57]">OTG_HS_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[56]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[33]">RTC_Alarm_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[d]">RTC_WKUP_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[3b]">SDIO_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[2e]">SPI2_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[3d]">SPI3_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from timing_manage.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[5d]">SystemInit</a> from system_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(.text)
 <LI><a href="#[c]">TAMP_STAMP_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[22]">TIM1_BRK_TIM9_IRQHandler</a> from dev_timer.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[25]">TIM1_CC_IRQHandler</a> from dev_timer.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[24]">TIM1_TRG_COM_TIM11_IRQHandler</a> from dev_timer.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[23]">TIM1_UP_TIM10_IRQHandler</a> from dev_timer.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[26]">TIM2_IRQHandler</a> from dev_timer.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[27]">TIM3_IRQHandler</a> from dev_timer.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[28]">TIM4_IRQHandler</a> from dev_timer.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[3c]">TIM5_IRQHandler</a> from dev_timer.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[40]">TIM6_DAC_IRQHandler</a> from dev_timer.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[41]">TIM7_IRQHandler</a> from dev_timer.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[35]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[38]">TIM8_CC_IRQHandler</a> from dev_timer.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[37]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[36]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[3e]">UART4_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[3f]">UART5_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from dev_usart.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[51]">USART6_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_stm32f4xx.o(.text) referenced from startup_stm32f4xx.o(RESET)
 <LI><a href="#[5e]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f4xx.o(.text)
 <LI><a href="#[5f]">fputc</a> from tftservice_text.o(.text) referenced from printfa.o(i.__0vprintf)
 <LI><a href="#[5c]">main</a> from main.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[5e]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(.text)
</UL>
<P><STRONG><a name="[1e4]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[60]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[1d5]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[1e5]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[1e6]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[1e7]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[1e8]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[1e9]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[5c]"></a>main</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = main &rArr; Main_Window &rArr; Main_ButtonProcess &rArr; Main_ButtonEvent &rArr; Snake_Window &rArr; Snake_ButtonProcess &rArr; Snake_ButtonEvent &rArr; Snake_Render &rArr; Snake_ProcessTilt &rArr; IMU_Process &rArr; IMU_ChangeFreq &rArr; IMUWindow_ErrorConfirm &rArr; IMUWindow_Render &rArr; IMUWindow_RenderData &rArr; IMU_FixAngle &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchPanel_Initialize
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_Initialize
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Window
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_Timer
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_Initialize
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Initialize
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Iinitialize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[6a]"></a>Get_Voltage</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, voltage_fb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Get_Voltage &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Window
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_Window
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Battery_Check
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cell_Detect
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Window
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_UpdateInput
</UL>

<P><STRONG><a name="[6f]"></a>Cell_Detect</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, voltage_fb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Voltage
</UL>

<P><STRONG><a name="[72]"></a>Battery_Check</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, voltage_fb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Voltage
</UL>

<P><STRONG><a name="[15c]"></a>RGB_Flash</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rgb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchPanel_CheckEvent
</UL>

<P><STRONG><a name="[73]"></a>RGB_Set</STRONG> (Thumb, 468 bytes, Stack size 24 bytes, rgb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RGB_Set &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_Initialize
</UL>

<P><STRONG><a name="[75]"></a>RGB_Update</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, rgb.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare3
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare2
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare1
</UL>

<P><STRONG><a name="[79]"></a>RGB_Process</STRONG> (Thumb, 468 bytes, Stack size 32 bytes, rgb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RGB_Process &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare3
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare2
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare1
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_TRG_COM_TIM11_IRQHandler
</UL>

<P><STRONG><a name="[64]"></a>RGB_Initialize</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, rgb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = RGB_Initialize &rArr; Initialize_TIMER_PWM &rArr; TIM_OC4Init
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_TIMER_PWM
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_TIMER
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[81]"></a>Setup_BUTTON</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, input.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Setup_BUTTON &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Button_Initialize
</UL>

<P><STRONG><a name="[63]"></a>Button_Initialize</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, input.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Button_Initialize &rArr; Setup_BUTTON &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup_BUTTON
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[82]"></a>Joystick_AX</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, input.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Joystick_AX &rArr; ADC_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_ProcessInput
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_InputEvent_Process
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Window
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joystick_A
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_UpdateInput
</UL>

<P><STRONG><a name="[83]"></a>Joystick_AY</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, input.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Joystick_AY &rArr; ADC_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_ProcessInput
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_InputEvent_Process
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Window
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joystick_A
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_UpdateInput
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_InputProcess
</UL>

<P><STRONG><a name="[84]"></a>Joystick_BX</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, input.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Joystick_BX &rArr; ADC_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_ProcessInput
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_InputEvent_Process
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Window
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joystick_B
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_UpdateInput
</UL>

<P><STRONG><a name="[85]"></a>Joystick_BY</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, input.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Joystick_BY &rArr; ADC_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_ProcessInput
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_InputEvent_Process
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Window
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joystick_B
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_UpdateInput
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_InputProcess
</UL>

<P><STRONG><a name="[86]"></a>Joystick_A</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, input.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joystick_AY
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joystick_AX
</UL>

<P><STRONG><a name="[87]"></a>Joystick_B</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, input.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joystick_BY
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joystick_BX
</UL>

<P><STRONG><a name="[88]"></a>INPUT_Read</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, input.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = INPUT_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonB_Joystick
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonB_Up
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonB_Left
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonB_Right
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonB_Down
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonA_Down
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonA_Left
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonA_Up
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonA_Right
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonA_Joystick
</UL>

<P><STRONG><a name="[8a]"></a>INPUT_ReadList</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, input.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = INPUT_ReadList
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_InputEvent_Process
</UL>

<P><STRONG><a name="[8b]"></a>ButtonA_Joystick</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, input.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ButtonA_Joystick &rArr; INPUT_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INPUT_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Window
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_ProcessInput
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_UpdateInput
</UL>

<P><STRONG><a name="[8c]"></a>ButtonA_Right</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, input.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ButtonA_Right &rArr; INPUT_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INPUT_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_ProcessInput
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Window
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_ProcessInput
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_UpdateInput
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_InputProcess
</UL>

<P><STRONG><a name="[8d]"></a>ButtonA_Up</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, input.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ButtonA_Up &rArr; INPUT_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INPUT_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_ProcessInput
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Window
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_ProcessInput
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_UpdateInput
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_InputProcess
</UL>

<P><STRONG><a name="[8e]"></a>ButtonA_Left</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, input.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ButtonA_Left &rArr; INPUT_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INPUT_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_ProcessInput
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Window
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_ProcessInput
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_UpdateInput
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_InputProcess
</UL>

<P><STRONG><a name="[8f]"></a>ButtonA_Down</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, input.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ButtonA_Down &rArr; INPUT_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INPUT_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_ProcessInput
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Window
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_ProcessInput
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_UpdateInput
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_InputProcess
</UL>

<P><STRONG><a name="[90]"></a>ButtonB_Down</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, input.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ButtonB_Down &rArr; INPUT_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INPUT_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_ProcessInput
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Window
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_ProcessInput
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_UpdateInput
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_InputProcess
</UL>

<P><STRONG><a name="[91]"></a>ButtonB_Right</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, input.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ButtonB_Right &rArr; INPUT_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INPUT_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_ProcessInput
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Window
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_ProcessInput
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_UpdateInput
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_InputProcess
</UL>

<P><STRONG><a name="[92]"></a>ButtonB_Left</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, input.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ButtonB_Left &rArr; INPUT_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INPUT_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_ProcessInput
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Window
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_ProcessInput
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_UpdateInput
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_InputProcess
</UL>

<P><STRONG><a name="[93]"></a>ButtonB_Up</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, input.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ButtonB_Up &rArr; INPUT_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INPUT_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_ProcessInput
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Window
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_ProcessInput
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_UpdateInput
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_InputProcess
</UL>

<P><STRONG><a name="[94]"></a>ButtonB_Joystick</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, input.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ButtonB_Joystick &rArr; INPUT_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INPUT_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Window
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_UpdateInput
</UL>

<P><STRONG><a name="[95]"></a>Main_ButtonEvent</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, app_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = Main_ButtonEvent &rArr; Snake_Window &rArr; Snake_ButtonProcess &rArr; Snake_ButtonEvent &rArr; Snake_Render &rArr; Snake_ProcessTilt &rArr; IMU_Process &rArr; IMU_ChangeFreq &rArr; IMUWindow_ErrorConfirm &rArr; IMUWindow_Render &rArr; IMUWindow_RenderData &rArr; IMU_FixAngle &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Window
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_Window
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Window
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_Window
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_Window
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_Window
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Window
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_ButtonProcess
</UL>

<P><STRONG><a name="[9d]"></a>Main_Render</STRONG> (Thumb, 298 bytes, Stack size 24 bytes, app_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = Main_Render &rArr; TFTSevice_Button_08x16 &rArr; TFT_Text_Transparent &rArr; TFT_Text_StringProcess &rArr; TFT_Text_PrintChar &rArr; TFT_SetPixelSafe &rArr; TFT_SetCursorSafe
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_Transparent
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawFullRect
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Clear
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_Button_08x16
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_ButtonProcess
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Window
</UL>

<P><STRONG><a name="[a2]"></a>Main_ButtonProcess</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, app_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = Main_ButtonProcess &rArr; Main_ButtonEvent &rArr; Snake_Window &rArr; Snake_ButtonProcess &rArr; Snake_ButtonEvent &rArr; Snake_Render &rArr; Snake_ProcessTilt &rArr; IMU_Process &rArr; IMU_ChangeFreq &rArr; IMUWindow_ErrorConfirm &rArr; IMUWindow_Render &rArr; IMUWindow_RenderData &rArr; IMU_FixAngle &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchPanel_GetPoint
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_RegionEvent
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_Button_08x16
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Render
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_ButtonEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Window
</UL>

<P><STRONG><a name="[69]"></a>Main_Window</STRONG> (Thumb, 176 bytes, Stack size 40 bytes, app_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 640<LI>Call Chain = Main_Window &rArr; Main_ButtonProcess &rArr; Main_ButtonEvent &rArr; Snake_Window &rArr; Snake_ButtonProcess &rArr; Snake_ButtonEvent &rArr; Snake_Render &rArr; Snake_ProcessTilt &rArr; IMU_Process &rArr; IMU_ChangeFreq &rArr; IMUWindow_ErrorConfirm &rArr; IMUWindow_Render &rArr; IMUWindow_RenderData &rArr; IMU_FixAngle &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_Background
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_ButtonProcess
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Render
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Voltage
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a7]"></a>Sudoku_RecursiveRandom</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, sudoku.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36 + In Cycle
<LI>Call Chain = Sudoku_RecursiveRandom &rArr;  Sudoku_RecursiveRandom (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_RecursiveRandom
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_SolCheckVaild
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_Event_Solve
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_RecursiveRandom
</UL>

<P><STRONG><a name="[a9]"></a>Sudoku_Generate</STRONG> (Thumb, 186 bytes, Stack size 32 bytes, sudoku.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Sudoku_Generate
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_Event_NewGame
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_Window
</UL>

<P><STRONG><a name="[97]"></a>Sudoku_Window</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, sudoku.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = Sudoku_Window &rArr; Sudoku_TouchEvent_Process &rArr; Sudoku_Event_NewGame &rArr; TFTSevice_ShowDialogYesNo &rArr; TouchPanel_GetPoint &rArr; TouchPanel_Filter &rArr; Read_XPT2046 &rArr; WR_CMD
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_TouchEvent_Process
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_Render
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_InputEvent_Process
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_InitLayout
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_Generate
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_ButtonEvent
</UL>

<P><STRONG><a name="[ad]"></a>Sudoku_TouchEvent_Process</STRONG> (Thumb, 578 bytes, Stack size 32 bytes, sudoku_event.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = Sudoku_TouchEvent_Process &rArr; Sudoku_Event_NewGame &rArr; TFTSevice_ShowDialogYesNo &rArr; TouchPanel_GetPoint &rArr; TouchPanel_Filter &rArr; Read_XPT2046 &rArr; WR_CMD
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_Button_16x24
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_RenderCell
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_Event_Choice
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_Event_Hint
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_Event_Board
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_Event_Solve
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_Event_Check
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_Event_NewGame
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchPanel_GetPoint
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_RegionEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_Window
</UL>

<P><STRONG><a name="[ae]"></a>Sudoku_InputEvent_Process</STRONG> (Thumb, 206 bytes, Stack size 32 bytes, sudoku_event.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = Sudoku_InputEvent_Process &rArr; Sudoku_Event_INPUT &rArr; Sudoku_Event_Board &rArr; Sudoku_RenderCell &rArr; TFT_Text_Background &rArr; TFT_Text_StringProcess &rArr; TFT_Text_PrintChar &rArr; TFT_SetPixelSafe &rArr; TFT_SetCursorSafe
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_Event_INPUT
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INPUT_ReadList
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joystick_BY
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joystick_BX
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joystick_AY
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joystick_AX
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_Window
</UL>

<P><STRONG><a name="[ab]"></a>Sudoku_InitLayout</STRONG> (Thumb, 296 bytes, Stack size 28 bytes, sudoku_layout.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Sudoku_InitLayout
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_Window
</UL>

<P><STRONG><a name="[b3]"></a>Sudoku_RenderCell</STRONG> (Thumb, 186 bytes, Stack size 32 bytes, sudoku_layout.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Sudoku_RenderCell &rArr; TFT_Text_Background &rArr; TFT_Text_StringProcess &rArr; TFT_Text_PrintChar &rArr; TFT_SetPixelSafe &rArr; TFT_SetCursorSafe
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_Background
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_Event_Choice
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_Event_Hint
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_Event_INPUT
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_Event_Board
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_Event_Solve
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_Event_Check
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_TouchEvent_Process
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_Render
</UL>

<P><STRONG><a name="[ac]"></a>Sudoku_Render</STRONG> (Thumb, 258 bytes, Stack size 16 bytes, sudoku_layout.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = Sudoku_Render &rArr; Sudoku_RenderCell &rArr; TFT_Text_Background &rArr; TFT_Text_StringProcess &rArr; TFT_Text_PrintChar &rArr; TFT_SetPixelSafe &rArr; TFT_SetCursorSafe
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawRect
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_Button_16x24
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_RenderCell
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_Transparent
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawFullRect
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_Event_Solve
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_Event_Check
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_Event_NewGame
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_Window
</UL>

<P><STRONG><a name="[bb]"></a>Snake_PutCell</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, app_snake.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = Snake_PutCell &rArr; TFT_DrawFullCircle &rArr; TFT_DrawTwoPointLine &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawFullCircle
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawFullRect
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Render
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_UpdateSnake
</UL>

<P><STRONG><a name="[bd]"></a>Snake_UpdatePoint</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, app_snake.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Snake_UpdatePoint &rArr; TFT_Text_Transparent &rArr; TFT_Text_StringProcess &rArr; TFT_Text_PrintChar &rArr; TFT_SetPixelSafe &rArr; TFT_SetCursorSafe
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_Transparent
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_Background
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_UpdateSnake
</UL>

<P><STRONG><a name="[be]"></a>Snake_UpdateSnake</STRONG> (Thumb, 584 bytes, Stack size 40 bytes, app_snake.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + In Cycle
<LI>Call Chain = Snake_UpdateSnake &rArr;  Snake_UpdateSnake (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2ulz
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_msTick
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_UpdateSnake
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_UpdatePoint
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_PutCell
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Generate
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_UpdateSnake
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Window
</UL>

<P><STRONG><a name="[c1]"></a>Snake_ProcessInput</STRONG> (Thumb, 436 bytes, Stack size 40 bytes, app_snake.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Snake_ProcessInput &rArr; Joystick_BY &rArr; ADC_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonB_Up
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonB_Left
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonB_Right
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonB_Down
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonA_Down
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonA_Left
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonA_Up
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonA_Right
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joystick_BY
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joystick_BX
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joystick_AY
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joystick_AX
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Window
</UL>

<P><STRONG><a name="[c2]"></a>Snake_ProcessTilt</STRONG> (Thumb, 162 bytes, Stack size 40 bytes, app_snake.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = Snake_ProcessTilt &rArr; IMU_Process &rArr; IMU_ChangeFreq &rArr; IMUWindow_ErrorConfirm &rArr; IMUWindow_Render &rArr; IMUWindow_RenderData &rArr; IMU_FixAngle &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_Process
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_FixAngle
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Render
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Window
</UL>

<P><STRONG><a name="[c5]"></a>Snake_Generate</STRONG> (Thumb, 400 bytes, Stack size 40 bytes, app_snake.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = Snake_Generate &rArr; Snake_UpdateSnake &rArr;  Snake_UpdateSnake (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_UpdateSnake
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_ButtonEvent
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Window
</UL>

<P><STRONG><a name="[c6]"></a>Snake_Render</STRONG> (Thumb, 384 bytes, Stack size 32 bytes, app_snake.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = Snake_Render &rArr; Snake_ProcessTilt &rArr; IMU_Process &rArr; IMU_ChangeFreq &rArr; IMUWindow_ErrorConfirm &rArr; IMUWindow_Render &rArr; IMUWindow_RenderData &rArr; IMU_FixAngle &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_ProcessTilt
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_PutCell
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawRect
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_Transparent
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_Background
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Clear
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_Button_08x16
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_ButtonEvent
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Window
</UL>

<P><STRONG><a name="[c7]"></a>Snake_ButtonEvent</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, app_snake.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = Snake_ButtonEvent &rArr; Snake_Render &rArr; Snake_ProcessTilt &rArr; IMU_Process &rArr; IMU_ChangeFreq &rArr; IMUWindow_ErrorConfirm &rArr; IMUWindow_Render &rArr; IMUWindow_RenderData &rArr; IMU_FixAngle &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Render
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Generate
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_Window
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_ButtonProcess
</UL>

<P><STRONG><a name="[c8]"></a>Snake_ButtonProcess</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, app_snake.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = Snake_ButtonProcess &rArr; Snake_ButtonEvent &rArr; Snake_Render &rArr; Snake_ProcessTilt &rArr; IMU_Process &rArr; IMU_ChangeFreq &rArr; IMUWindow_ErrorConfirm &rArr; IMUWindow_Render &rArr; IMUWindow_RenderData &rArr; IMU_FixAngle &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_ButtonEvent
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchPanel_GetPoint
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_RegionEvent
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_Button_08x16
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Window
</UL>

<P><STRONG><a name="[96]"></a>Snake_Window</STRONG> (Thumb, 206 bytes, Stack size 40 bytes, app_snake.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = Snake_Window &rArr; Snake_ButtonProcess &rArr; Snake_ButtonEvent &rArr; Snake_Render &rArr; Snake_ProcessTilt &rArr; IMU_Process &rArr; IMU_ChangeFreq &rArr; IMUWindow_ErrorConfirm &rArr; IMUWindow_Render &rArr; IMUWindow_RenderData &rArr; IMU_FixAngle &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_ButtonProcess
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Render
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Generate
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_ProcessTilt
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_ProcessInput
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_UpdateSnake
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_ShowDialogOK
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_ButtonEvent
</UL>

<P><STRONG><a name="[c9]"></a>Bluetooth_GetPwrPin</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bluetooth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Event_SwitchPWR
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Render_Status
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_SwitchMode
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Send
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_SendString
</UL>

<P><STRONG><a name="[cb]"></a>Bluetooth_SendString</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, bluetooth.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Bluetooth_SendString
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_GetPwrPin
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_SetupUART
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_SetRole
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_SetPasskey
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_SetName
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_SetMode
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_GetInfo
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_GetDeviceName
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_DevicePair
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_DeviceLink
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_DeviceCheckAuthenticated
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_DeviceBind
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_Inquire
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_SetInquireMode
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_CancelInquire
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_InitSPP
</UL>

<P><STRONG><a name="[ce]"></a>Bluetooth_Send</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, bluetooth.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Bluetooth_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_GetPwrPin
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_ProcessTilt
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_ProcessInput
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_SendData
</UL>

<P><STRONG><a name="[cf]"></a>Bluetooth_PrepareRX</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, bluetooth.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Bluetooth_PrepareRX &rArr; USART_Interrupt_Set &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Interrupt_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_SetupUART
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_SetRole
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_SetPasskey
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_SetName
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_SetMode
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_GetInfo
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_GetDeviceName
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_DevicePair
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_DeviceLink
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_DeviceCheckAuthenticated
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_DeviceBind
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_Inquire
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_SetInquireMode
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_CancelInquire
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_InitSPP
</UL>

<P><STRONG><a name="[d1]"></a>Bluetooth_SetupUART</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, bluetooth.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Bluetooth_SetupUART &rArr; USART_OpenPort &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_OpenPort
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Interrupt_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_SwitchMode
</UL>

<P><STRONG><a name="[66]"></a>Bluetooth_Initialize</STRONG> (Thumb, 240 bytes, Stack size 32 bytes, bluetooth.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Bluetooth_Initialize &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d3]"></a>Bluetooth_SetPwrPin</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, bluetooth.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Bluetooth_SetPwrPin
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Event_SwitchPWR
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_SwitchMode
</UL>

<P><STRONG><a name="[d5]"></a>Bluetooth_SetKeyPin</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, bluetooth.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Bluetooth_SetKeyPin
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Event_SwitchPWR
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_SwitchMode
</UL>

<P><STRONG><a name="[d6]"></a>Bluetooth_GetKeyPin</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bluetooth.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Render_Status
</UL>

<P><STRONG><a name="[d7]"></a>Bluetooth_GetSttPin</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bluetooth.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>

<P><STRONG><a name="[d8]"></a>Bluetooth_SwitchMode</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, bluetooth.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = Bluetooth_SwitchMode &rArr; Bluetooth_Render_Status &rArr; TFTSevice_Button_08x16 &rArr; TFT_Text_Transparent &rArr; TFT_Text_StringProcess &rArr; TFT_Text_PrintChar &rArr; TFT_SetPixelSafe &rArr; TFT_SetCursorSafe
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Render_Status
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_SetKeyPin
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_SetPwrPin
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_SetupUART
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_GetPwrPin
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Event_Button
</UL>

<P><STRONG><a name="[9a]"></a>Bluetooth_Window</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, bluetooth.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = Bluetooth_Window &rArr; Bluetooth_TouchEvent_Process &rArr; Bluetooth_Event_Button &rArr; Bluetooth_Event_SwitchPWR &rArr; TFTSevice_ShowDialogYesNo &rArr; TouchPanel_GetPoint &rArr; TouchPanel_Filter &rArr; Read_XPT2046 &rArr; WR_CMD
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_TouchEvent_Process
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Render_Main
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_InitLayout
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_ButtonEvent
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_ButtonEvent
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_ButtonEvent
</UL>

<P><STRONG><a name="[de]"></a>Bluetooth_ATConfirm</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, bluetooth_event.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = Bluetooth_ATConfirm &rArr; TFTSevice_ShowDialogOK &rArr; TouchPanel_GetPoint &rArr; TouchPanel_Filter &rArr; Read_XPT2046 &rArr; WR_CMD
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Render_Main
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_ShowDialogOK
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_SetupUART
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_SetRole
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_SetPasskey
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_SetName
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_SetMode
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_Scan
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_GetDeviceName
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_DevicePair
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_DeviceLink
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_DeviceCheckAuthenticated
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_DeviceBind
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_Inquire
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_SetInquireMode
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_CancelInquire
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_InitSPP
</UL>

<P><STRONG><a name="[dd]"></a>Bluetooth_TouchEvent_Process</STRONG> (Thumb, 242 bytes, Stack size 24 bytes, bluetooth_event.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = Bluetooth_TouchEvent_Process &rArr; Bluetooth_Event_Button &rArr; Bluetooth_Event_SwitchPWR &rArr; TFTSevice_ShowDialogYesNo &rArr; TouchPanel_GetPoint &rArr; TouchPanel_Filter &rArr; Read_XPT2046 &rArr; WR_CMD
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Event_Button
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Event_Connect
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchPanel_GetPoint
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_RegionEvent
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_Button_08x16
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Window
</UL>

<P><STRONG><a name="[db]"></a>Bluetooth_InitLayout</STRONG> (Thumb, 464 bytes, Stack size 36 bytes, bluetooth_layout.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Bluetooth_InitLayout
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Window
</UL>

<P><STRONG><a name="[ee]"></a>Bluetooth_Clear_Terminal</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, bluetooth_layout.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Bluetooth_Clear_Terminal &rArr; TFT_DrawFullRect &rArr; TFT_SetPixelSafe &rArr; TFT_SetCursorSafe
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawFullRect
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Render_Main_Terminal
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Event_Button
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Render_Status
</UL>

<P><STRONG><a name="[ef]"></a>Bluetooth_Render_Main_Terminal</STRONG> (Thumb, 70 bytes, Stack size 40 bytes, bluetooth_layout.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = Bluetooth_Render_Main_Terminal &rArr; TFT_Text_Background_Limit &rArr; TFT_Text_StringProcess &rArr; TFT_Text_PrintChar &rArr; TFT_SetPixelSafe &rArr; TFT_SetCursorSafe
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_Background_Limit
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Clear_Terminal
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Event_Button
</UL>

<P><STRONG><a name="[da]"></a>Bluetooth_Render_Status</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, bluetooth_layout.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Bluetooth_Render_Status &rArr; TFTSevice_Button_08x16 &rArr; TFT_Text_Transparent &rArr; TFT_Text_StringProcess &rArr; TFT_Text_PrintChar &rArr; TFT_SetPixelSafe &rArr; TFT_SetCursorSafe
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Clear_Terminal
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_GetKeyPin
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_GetPwrPin
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_Button_08x16
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Event_Button
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Render_Main
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_SwitchMode
</UL>

<P><STRONG><a name="[eb]"></a>Bluetooth_Render_Setting</STRONG> (Thumb, 800 bytes, Stack size 24 bytes, bluetooth_layout.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = Bluetooth_Render_Setting &rArr; TFTSevice_Button_08x16 &rArr; TFT_Text_Transparent &rArr; TFT_Text_StringProcess &rArr; TFT_Text_PrintChar &rArr; TFT_SetPixelSafe &rArr; TFT_SetCursorSafe
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawRect
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_Transparent
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawFullRect
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_Button_08x16
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Event_Button
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Event_SETTINGProcess
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Event_SETTINGButton
</UL>

<P><STRONG><a name="[dc]"></a>Bluetooth_Render_Main</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, bluetooth_layout.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = Bluetooth_Render_Main &rArr; Bluetooth_Render_Status &rArr; TFTSevice_Button_08x16 &rArr; TFT_Text_Transparent &rArr; TFT_Text_StringProcess &rArr; TFT_Text_PrintChar &rArr; TFT_SetPixelSafe &rArr; TFT_SetCursorSafe
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Render_Status
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_Transparent
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawFullRect
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Clear
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_Button_08x16
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_ATConfirm
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Event_Button
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Event_SETTINGButton
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Event_Connect
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Window
</UL>

<P><STRONG><a name="[ea]"></a>Bluetooth_AT_SetupUART</STRONG> (Thumb, 302 bytes, Stack size 16 bytes, bluetooth_atcmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = Bluetooth_AT_SetupUART &rArr; Bluetooth_ATConfirm &rArr; TFTSevice_ShowDialogOK &rArr; TouchPanel_GetPoint &rArr; TouchPanel_Filter &rArr; Read_XPT2046 &rArr; WR_CMD
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_ATConfirm
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_PrepareRX
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_SendString
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooh_AT_FindString
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Event_SETTINGButton
</UL>

<P><STRONG><a name="[f2]"></a>Bluetooth_AT_GetInfo</STRONG> (Thumb, 252 bytes, Stack size 24 bytes, bluetooth_atcmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Bluetooth_AT_GetInfo &rArr; Bluetooh_AT_FindString &rArr; Check_msTick
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_PrepareRX
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_SendString
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooh_AT_CheckString
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooh_AT_FindString
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Event_Button
</UL>

<P><STRONG><a name="[e7]"></a>Bluetooth_AT_SetName</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, bluetooth_atcmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = Bluetooth_AT_SetName &rArr; Bluetooth_ATConfirm &rArr; TFTSevice_ShowDialogOK &rArr; TouchPanel_GetPoint &rArr; TouchPanel_Filter &rArr; Read_XPT2046 &rArr; WR_CMD
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_ATConfirm
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_PrepareRX
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_SendString
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooh_AT_FindString
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Event_SETTINGButton
</UL>

<P><STRONG><a name="[e4]"></a>Bluetooth_AT_SetPasskey</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, bluetooth_atcmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = Bluetooth_AT_SetPasskey &rArr; Bluetooth_ATConfirm &rArr; TFTSevice_ShowDialogOK &rArr; TouchPanel_GetPoint &rArr; TouchPanel_Filter &rArr; Read_XPT2046 &rArr; WR_CMD
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_ATConfirm
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_PrepareRX
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_SendString
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooh_AT_FindString
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Event_SETTINGButton
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Event_Connect
</UL>

<P><STRONG><a name="[e9]"></a>Bluetooth_AT_SetRole</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, bluetooth_atcmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = Bluetooth_AT_SetRole &rArr; Bluetooth_ATConfirm &rArr; TFTSevice_ShowDialogOK &rArr; TouchPanel_GetPoint &rArr; TouchPanel_Filter &rArr; Read_XPT2046 &rArr; WR_CMD
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_ATConfirm
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_PrepareRX
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_SendString
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooh_AT_FindString
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Event_SETTINGButton
</UL>

<P><STRONG><a name="[e8]"></a>Bluetooth_AT_SetMode</STRONG> (Thumb, 864 bytes, Stack size 8 bytes, bluetooth_atcmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = Bluetooth_AT_SetMode &rArr; Bluetooth_ATConfirm &rArr; TFTSevice_ShowDialogOK &rArr; TouchPanel_GetPoint &rArr; TouchPanel_Filter &rArr; Read_XPT2046 &rArr; WR_CMD
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_ATConfirm
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_PrepareRX
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_SendString
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooh_AT_FindString
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Event_SETTINGButton
</UL>

<P><STRONG><a name="[f8]"></a>Bluetooth_AT_InitSPP</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, bluetooth_atcmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = Bluetooth_AT_InitSPP &rArr; Bluetooth_ATConfirm &rArr; TFTSevice_ShowDialogOK &rArr; TouchPanel_GetPoint &rArr; TouchPanel_Filter &rArr; Read_XPT2046 &rArr; WR_CMD
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_ATConfirm
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_PrepareRX
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_SendString
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooh_AT_FindString
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_Scan
</UL>

<P><STRONG><a name="[f9]"></a>Bluetooth_AT_CancelInquire</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, bluetooth_atcmd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_ATConfirm
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_PrepareRX
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_SendString
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooh_AT_FindString
</UL>

<P><STRONG><a name="[fa]"></a>Bluetooth_AT_SetInquireMode</STRONG> (Thumb, 316 bytes, Stack size 24 bytes, bluetooth_atcmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = Bluetooth_AT_SetInquireMode &rArr; Bluetooth_ATConfirm &rArr; TFTSevice_ShowDialogOK &rArr; TouchPanel_GetPoint &rArr; TouchPanel_Filter &rArr; Read_XPT2046 &rArr; WR_CMD
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_ATConfirm
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_PrepareRX
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_SendString
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooh_AT_FindString
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_Scan
</UL>

<P><STRONG><a name="[fe]"></a>Bluetooth_AT_Inquire</STRONG> (Thumb, 306 bytes, Stack size 40 bytes, bluetooth_atcmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = Bluetooth_AT_Inquire &rArr; Bluetooth_ATConfirm &rArr; TFTSevice_ShowDialogOK &rArr; TouchPanel_GetPoint &rArr; TouchPanel_Filter &rArr; Read_XPT2046 &rArr; WR_CMD
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_ATConfirm
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_PrepareRX
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_SendString
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooh_AT_CheckString
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooh_AT_FindString
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_Scan
</UL>

<P><STRONG><a name="[f0]"></a>Bluetooth_AT_Scan</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, bluetooth_atcmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = Bluetooth_AT_Scan &rArr; Bluetooth_AT_Inquire &rArr; Bluetooth_ATConfirm &rArr; TFTSevice_ShowDialogOK &rArr; TouchPanel_GetPoint &rArr; TouchPanel_Filter &rArr; Read_XPT2046 &rArr; WR_CMD
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_ATConfirm
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_Inquire
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_SetInquireMode
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_InitSPP
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Event_Button
</UL>

<P><STRONG><a name="[f1]"></a>Bluetooth_AT_GetDeviceName</STRONG> (Thumb, 596 bytes, Stack size 24 bytes, bluetooth_atcmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = Bluetooth_AT_GetDeviceName &rArr; Bluetooth_ATConfirm &rArr; TFTSevice_ShowDialogOK &rArr; TouchPanel_GetPoint &rArr; TouchPanel_Filter &rArr; Read_XPT2046 &rArr; WR_CMD
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_ATConfirm
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_PrepareRX
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_SendString
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooh_AT_CheckString
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooh_AT_FindString
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Event_Button
</UL>

<P><STRONG><a name="[e0]"></a>Bluetooth_AT_DeviceCheckAuthenticated</STRONG> (Thumb, 210 bytes, Stack size 8 bytes, bluetooth_atcmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = Bluetooth_AT_DeviceCheckAuthenticated &rArr; Bluetooth_ATConfirm &rArr; TFTSevice_ShowDialogOK &rArr; TouchPanel_GetPoint &rArr; TouchPanel_Filter &rArr; Read_XPT2046 &rArr; WR_CMD
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_ATConfirm
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_PrepareRX
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_SendString
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooh_AT_FindString
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Event_Connect
</UL>

<P><STRONG><a name="[e5]"></a>Bluetooth_AT_DevicePair</STRONG> (Thumb, 272 bytes, Stack size 24 bytes, bluetooth_atcmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = Bluetooth_AT_DevicePair &rArr; Bluetooth_ATConfirm &rArr; TFTSevice_ShowDialogOK &rArr; TouchPanel_GetPoint &rArr; TouchPanel_Filter &rArr; Read_XPT2046 &rArr; WR_CMD
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_ATConfirm
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_PrepareRX
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_SendString
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooh_AT_FindString
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Event_Connect
</UL>

<P><STRONG><a name="[e1]"></a>Bluetooth_AT_DeviceBind</STRONG> (Thumb, 186 bytes, Stack size 8 bytes, bluetooth_atcmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = Bluetooth_AT_DeviceBind &rArr; Bluetooth_ATConfirm &rArr; TFTSevice_ShowDialogOK &rArr; TouchPanel_GetPoint &rArr; TouchPanel_Filter &rArr; Read_XPT2046 &rArr; WR_CMD
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_ATConfirm
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_PrepareRX
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_SendString
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooh_AT_FindString
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Event_Connect
</UL>

<P><STRONG><a name="[e2]"></a>Bluetooth_AT_DeviceLink</STRONG> (Thumb, 528 bytes, Stack size 8 bytes, bluetooth_atcmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = Bluetooth_AT_DeviceLink &rArr; Bluetooth_ATConfirm &rArr; TFTSevice_ShowDialogOK &rArr; TouchPanel_GetPoint &rArr; TouchPanel_Filter &rArr; Read_XPT2046 &rArr; WR_CMD
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_ATConfirm
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_PrepareRX
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_SendString
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooh_AT_FindString
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Event_Connect
</UL>

<P><STRONG><a name="[ff]"></a>RobotArm_Render</STRONG> (Thumb, 214 bytes, Stack size 32 bytes, app_robotarm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = RobotArm_Render &rArr; TFTSevice_Button_08x16 &rArr; TFT_Text_Transparent &rArr; TFT_Text_StringProcess &rArr; TFT_Text_PrintChar &rArr; TFT_SetPixelSafe &rArr; TFT_SetCursorSafe
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_Transparent
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_Background
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawFullRect
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Clear
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_Button_08x16
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_TrackBarRender
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_Window
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_ButtonEvent
</UL>

<P><STRONG><a name="[102]"></a>RobotArm_SendData</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, app_robotarm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RobotArm_SendData &rArr; Bluetooth_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Send
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_Window
</UL>

<P><STRONG><a name="[103]"></a>RobotArm_TouchProcess</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, app_robotarm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = RobotArm_TouchProcess &rArr; TouchPanel_GetPoint &rArr; TouchPanel_Filter &rArr; Read_XPT2046 &rArr; WR_CMD
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchPanel_GetPoint
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_TrackBarEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_Window
</UL>

<P><STRONG><a name="[105]"></a>RobotArm_ButtonEvent</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, app_robotarm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = RobotArm_ButtonEvent &rArr; Bluetooth_Window &rArr; Bluetooth_TouchEvent_Process &rArr; Bluetooth_Event_Button &rArr; Bluetooth_Event_SwitchPWR &rArr; TFTSevice_ShowDialogYesNo &rArr; TouchPanel_GetPoint &rArr; TouchPanel_Filter &rArr; Read_XPT2046 &rArr; WR_CMD
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Window
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_TrackBarValueRender
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_Render
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_ButtonProcess
</UL>

<P><STRONG><a name="[107]"></a>RobotArm_ButtonProcess</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, app_robotarm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = RobotArm_ButtonProcess &rArr; RobotArm_ButtonEvent &rArr; Bluetooth_Window &rArr; Bluetooth_TouchEvent_Process &rArr; Bluetooth_Event_Button &rArr; Bluetooth_Event_SwitchPWR &rArr; TFTSevice_ShowDialogYesNo &rArr; TouchPanel_GetPoint &rArr; TouchPanel_Filter &rArr; Read_XPT2046 &rArr; WR_CMD
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchPanel_GetPoint
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_RegionEvent
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_Button_08x16
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_ButtonEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_Window
</UL>

<P><STRONG><a name="[108]"></a>RobotArm_InputProcess</STRONG> (Thumb, 312 bytes, Stack size 24 bytes, app_robotarm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = RobotArm_InputProcess &rArr; TFTSevice_TrackBarValueRender &rArr; TFTSevice_TrackBarTouchRender &rArr; TFT_DrawFullRect &rArr; TFT_SetPixelSafe &rArr; TFT_SetCursorSafe
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonB_Up
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonB_Left
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonB_Right
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonB_Down
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonA_Down
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonA_Left
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonA_Up
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonA_Right
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joystick_BY
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joystick_AY
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_TrackBarValueRender
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_Window
</UL>

<P><STRONG><a name="[99]"></a>RobotArm_Window</STRONG> (Thumb, 314 bytes, Stack size 48 bytes, app_robotarm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = RobotArm_Window &rArr; RobotArm_ButtonProcess &rArr; RobotArm_ButtonEvent &rArr; Bluetooth_Window &rArr; Bluetooth_TouchEvent_Process &rArr; Bluetooth_Event_Button &rArr; Bluetooth_Event_SwitchPWR &rArr; TFTSevice_ShowDialogYesNo &rArr; TouchPanel_GetPoint &rArr; TouchPanel_Filter &rArr; Read_XPT2046 &rArr; WR_CMD
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_Background
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Voltage
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_InputProcess
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_ButtonProcess
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_TouchProcess
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_SendData
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_Render
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_ButtonEvent
</UL>

<P><STRONG><a name="[10b]"></a>Shellmo_UpdateInput</STRONG> (Thumb, 584 bytes, Stack size 40 bytes, app_shellmo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Shellmo_UpdateInput &rArr; TFT_Text_Background &rArr; TFT_Text_StringProcess &rArr; TFT_Text_PrintChar &rArr; TFT_SetPixelSafe &rArr; TFT_SetCursorSafe
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawFullCircle
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_Background
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonB_Joystick
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonB_Up
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonB_Left
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonB_Right
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonB_Down
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonA_Down
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonA_Left
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonA_Up
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonA_Right
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonA_Joystick
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joystick_BY
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joystick_BX
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joystick_AY
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joystick_AX
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Voltage
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_Window
</UL>

<P><STRONG><a name="[10c]"></a>Shellmo_ProcessInput</STRONG> (Thumb, 238 bytes, Stack size 24 bytes, app_shellmo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Shellmo_ProcessInput &rArr; Bluetooth_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Send
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonB_Up
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonB_Left
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonB_Right
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonB_Down
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonA_Down
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonA_Left
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonA_Up
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonA_Right
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonA_Joystick
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_Window
</UL>

<P><STRONG><a name="[10d]"></a>Shellmo_ProcessTilt</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, app_shellmo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = Shellmo_ProcessTilt &rArr; IMU_Process &rArr; IMU_ChangeFreq &rArr; IMUWindow_ErrorConfirm &rArr; IMUWindow_Render &rArr; IMUWindow_RenderData &rArr; IMU_FixAngle &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Send
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_Process
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_FixAngle
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_Window
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_Render
</UL>

<P><STRONG><a name="[10e]"></a>Shellmo_Render</STRONG> (Thumb, 206 bytes, Stack size 24 bytes, app_shellmo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = Shellmo_Render &rArr; Shellmo_ProcessTilt &rArr; IMU_Process &rArr; IMU_ChangeFreq &rArr; IMUWindow_ErrorConfirm &rArr; IMUWindow_Render &rArr; IMUWindow_RenderData &rArr; IMU_FixAngle &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_Transparent
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawFullRect
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Clear
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_Button_08x16
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_ProcessTilt
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_Window
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_ButtonEvent
</UL>

<P><STRONG><a name="[10f]"></a>Shellmo_ButtonEvent</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, app_shellmo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = Shellmo_ButtonEvent &rArr; Shellmo_Render &rArr; Shellmo_ProcessTilt &rArr; IMU_Process &rArr; IMU_ChangeFreq &rArr; IMUWindow_ErrorConfirm &rArr; IMUWindow_Render &rArr; IMUWindow_RenderData &rArr; IMU_FixAngle &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_Window
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Window
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_Render
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_ChoiceProcess
</UL>

<P><STRONG><a name="[110]"></a>Shellmo_ChoiceProcess</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, app_shellmo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = Shellmo_ChoiceProcess &rArr; Shellmo_ButtonEvent &rArr; Shellmo_Render &rArr; Shellmo_ProcessTilt &rArr; IMU_Process &rArr; IMU_ChangeFreq &rArr; IMUWindow_ErrorConfirm &rArr; IMUWindow_Render &rArr; IMUWindow_RenderData &rArr; IMU_FixAngle &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchPanel_GetPoint
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_RegionEvent
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_Button_08x16
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_ButtonEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_Window
</UL>

<P><STRONG><a name="[98]"></a>Shellmo_Window</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, app_shellmo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = Shellmo_Window &rArr; Shellmo_ChoiceProcess &rArr; Shellmo_ButtonEvent &rArr; Shellmo_Render &rArr; Shellmo_ProcessTilt &rArr; IMU_Process &rArr; IMU_ChangeFreq &rArr; IMUWindow_ErrorConfirm &rArr; IMUWindow_Render &rArr; IMUWindow_RenderData &rArr; IMU_FixAngle &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_ChoiceProcess
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_Render
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_ProcessTilt
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_ProcessInput
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_UpdateInput
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_ButtonEvent
</UL>

<P><STRONG><a name="[9c]"></a>Test_Window</STRONG> (Thumb, 772 bytes, Stack size 64 bytes, app_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = Test_Window &rArr; TouchPanel_GetPoint &rArr; TouchPanel_Filter &rArr; Read_XPT2046 &rArr; WR_CMD
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawFullCircle
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawRect
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchPanel_GetPoint
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_Background
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawFullRect
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Clear
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonB_Joystick
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonB_Up
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonB_Left
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonB_Right
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonB_Down
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonA_Down
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonA_Left
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonA_Up
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonA_Right
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButtonA_Joystick
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joystick_BY
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joystick_BX
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joystick_AY
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joystick_AX
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Voltage
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_SetPixelSafe
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_ButtonEvent
</UL>

<P><STRONG><a name="[c4]"></a>IMU_FixAngle</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, app_imu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = IMU_FixAngle &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_ProcessTilt
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUWindow_RenderData
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_ProcessTilt
</UL>

<P><STRONG><a name="[115]"></a>IMUWindow_RenderData</STRONG> (Thumb, 512 bytes, Stack size 40 bytes, app_imu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = IMUWindow_RenderData &rArr; IMU_FixAngle &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawFullCircle
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_FixAngle
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_Background
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_Process
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUWindow_Render
</UL>

<P><STRONG><a name="[116]"></a>IMUWindow_Render</STRONG> (Thumb, 192 bytes, Stack size 24 bytes, app_imu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = IMUWindow_Render &rArr; IMUWindow_RenderData &rArr; IMU_FixAngle &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawRect
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_Transparent
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawFullRect
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Clear
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_Button_08x16
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUWindow_RenderData
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_Window
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUWindow_ButtonEvent
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUWindow_ErrorConfirm
</UL>

<P><STRONG><a name="[117]"></a>IMUWindow_ErrorConfirm</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, app_imu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = IMUWindow_ErrorConfirm &rArr; IMUWindow_Render &rArr; IMUWindow_RenderData &rArr; IMU_FixAngle &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_ShowDialogOK
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUWindow_Render
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_Process
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUWindow_ButtonEvent
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_ChangeFreq
</UL>

<P><STRONG><a name="[118]"></a>IMU_ChangeFreq</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, app_imu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = IMU_ChangeFreq &rArr; IMUWindow_ErrorConfirm &rArr; IMUWindow_Render &rArr; IMUWindow_RenderData &rArr; IMU_FixAngle &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUWindow_ErrorConfirm
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_Process
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_Window
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUWindow_ButtonEvent
</UL>

<P><STRONG><a name="[119]"></a>IMUWindow_ButtonEvent</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, app_imu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = IMUWindow_ButtonEvent &rArr; IMU_ChangeFreq &rArr; IMUWindow_ErrorConfirm &rArr; IMUWindow_Render &rArr; IMUWindow_RenderData &rArr; IMU_FixAngle &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTService_Keyboard
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_Button_08x16
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTService_Keyboard_StringToInt64
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_ChangeFreq
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUWindow_ErrorConfirm
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUWindow_Render
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUWindow_TouchProcess
</UL>

<P><STRONG><a name="[11b]"></a>IMUWindow_TouchProcess</STRONG> (Thumb, 406 bytes, Stack size 24 bytes, app_imu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = IMUWindow_TouchProcess &rArr; IMUWindow_ButtonEvent &rArr; IMU_ChangeFreq &rArr; IMUWindow_ErrorConfirm &rArr; IMUWindow_Render &rArr; IMUWindow_RenderData &rArr; IMU_FixAngle &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchPanel_GetPoint
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_RegionEvent
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_Button_08x16
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUWindow_ButtonEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_Window
</UL>

<P><STRONG><a name="[c3]"></a>IMU_Process</STRONG> (Thumb, 348 bytes, Stack size 56 bytes, app_imu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = IMU_Process &rArr; IMU_ChangeFreq &rArr; IMUWindow_ErrorConfirm &rArr; IMUWindow_Render &rArr; IMUWindow_RenderData &rArr; IMU_FixAngle &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_msTick
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2f
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_Update_Data
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_QuaternionToEuler
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_Initialize
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_AHRS
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_ChangeFreq
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUWindow_ErrorConfirm
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUWindow_RenderData
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_ProcessTilt
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_Window
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_ProcessTilt
</UL>

<P><STRONG><a name="[9b]"></a>IMU_Window</STRONG> (Thumb, 134 bytes, Stack size 48 bytes, app_imu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = IMU_Window &rArr; IMU_Process &rArr; IMU_ChangeFreq &rArr; IMUWindow_ErrorConfirm &rArr; IMUWindow_Render &rArr; IMUWindow_RenderData &rArr; IMU_FixAngle &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_Process
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUWindow_TouchProcess
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_ChangeFreq
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUWindow_Render
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_ButtonEvent
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_ButtonEvent
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_ButtonEvent
</UL>

<P><STRONG><a name="[126]"></a>MPU6050_GetDeviceID</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, mpu6050.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = MPU6050_GetDeviceID &rArr; I2C_Read &rArr; I2C_Request &rArr; I2C_BUSY_Check &rArr; I2C_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_ConnectionCheck
</UL>

<P><STRONG><a name="[127]"></a>MPU6050_ConnectionCheck</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, mpu6050.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = MPU6050_ConnectionCheck &rArr; MPU6050_GetDeviceID &rArr; I2C_Read &rArr; I2C_Request &rArr; I2C_BUSY_Check &rArr; I2C_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_GetDeviceID
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_IMU_Bus
</UL>

<P><STRONG><a name="[128]"></a>MPU6050_Set_SMPLRT_DIV</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, mpu6050.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = MPU6050_Set_SMPLRT_DIV &rArr; I2C_Read &rArr; I2C_Request &rArr; I2C_BUSY_Check &rArr; I2C_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RegWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_IMU_Bus
</UL>

<P><STRONG><a name="[129]"></a>MPU6050_Set_Configuration</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, mpu6050.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = MPU6050_Set_Configuration &rArr; I2C_Read &rArr; I2C_Request &rArr; I2C_BUSY_Check &rArr; I2C_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RegWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_IMU_Bus
</UL>

<P><STRONG><a name="[12a]"></a>MPU6050_Set_GYRO_Config</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, mpu6050.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = MPU6050_Set_GYRO_Config &rArr; I2C_Read &rArr; I2C_Request &rArr; I2C_BUSY_Check &rArr; I2C_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RegWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_IMU_Bus
</UL>

<P><STRONG><a name="[12b]"></a>MPU6050_Set_ACCEL_Config</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, mpu6050.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = MPU6050_Set_ACCEL_Config &rArr; I2C_Read &rArr; I2C_Request &rArr; I2C_BUSY_Check &rArr; I2C_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RegWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_IMU_Bus
</UL>

<P><STRONG><a name="[12c]"></a>MPU6050_Set_PWR_MGMT_1</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, mpu6050.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = MPU6050_Set_PWR_MGMT_1 &rArr; I2C_Read &rArr; I2C_Request &rArr; I2C_BUSY_Check &rArr; I2C_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RegWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_IMU_Bus
</UL>

<P><STRONG><a name="[12d]"></a>MPU6050_Get_rawDATA</STRONG> (Thumb, 120 bytes, Stack size 48 bytes, mpu6050.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>

<P><STRONG><a name="[12e]"></a>MPU6050_Get_rawMotion</STRONG> (Thumb, 88 bytes, Stack size 48 bytes, mpu6050.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = MPU6050_Get_rawMotion &rArr; I2C_Read &rArr; I2C_Request &rArr; I2C_BUSY_Check &rArr; I2C_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_Update_Data
</UL>

<P><STRONG><a name="[12f]"></a>Initialize_IMU_Bus</STRONG> (Thumb, 200 bytes, Stack size 24 bytes, sensor_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = Initialize_IMU_Bus &rArr; MPU6050_Set_PWR_MGMT_1 &rArr; I2C_Read &rArr; I2C_Request &rArr; I2C_BUSY_Check &rArr; I2C_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_I2C
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Set_PWR_MGMT_1
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Set_ACCEL_Config
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Set_GYRO_Config
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Set_Configuration
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Set_SMPLRT_DIV
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_ConnectionCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_Initialize
</UL>

<P><STRONG><a name="[11e]"></a>IMU_Update_Data</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, sensor_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = IMU_Update_Data &rArr; MPU6050_Get_rawMotion &rArr; I2C_Read &rArr; I2C_Request &rArr; I2C_BUSY_Check &rArr; I2C_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Get_rawMotion
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_Process
</UL>

<P><STRONG><a name="[131]"></a>IMU_EulerToQuaternion</STRONG> (Thumb, 556 bytes, Stack size 80 bytes, sensor_data.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[121]"></a>IMU_QuaternionToEuler</STRONG> (Thumb, 330 bytes, Stack size 56 bytes, sensor_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = IMU_QuaternionToEuler &rArr; atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_Process
</UL>

<P><STRONG><a name="[139]"></a>IMU_Compensate</STRONG> (Thumb, 420 bytes, Stack size 56 bytes, sensor_data.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[120]"></a>IMU_AHRS</STRONG> (Thumb, 1336 bytes, Stack size 136 bytes, sensor_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = IMU_AHRS &rArr; sqrt &rArr; _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_Process
</UL>

<P><STRONG><a name="[11d]"></a>IMU_Initialize</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, sensor_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = IMU_Initialize &rArr; Initialize_IMU_Bus &rArr; MPU6050_Set_PWR_MGMT_1 &rArr; I2C_Read &rArr; I2C_Request &rArr; I2C_BUSY_Check &rArr; I2C_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_IMU_Bus
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_Process
</UL>

<P><STRONG><a name="[62]"></a>Initialize_Timer</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, timing_manage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Initialize_Timer &rArr; Initialize_TIMER_INTERRUPT &rArr; TIM_OC4Init
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_TIMER
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_TIMER_INTERRUPT
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1ea]"></a>Increase_RTC</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, timing_manage.o(.text), UNUSED)

<P><STRONG><a name="[bf]"></a>Get_msTick</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, timing_manage.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_Process
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_UpdateSnake
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EVENT_Check
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_LAST_TRANSMIT_Check
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_BUSY_Check
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_msTick
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooh_AT_FindString
</UL>

<P><STRONG><a name="[f7]"></a>Check_msTick</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, timing_manage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Check_msTick
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_msTick
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EVENT_Check
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_LAST_TRANSMIT_Check
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_BUSY_Check
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooh_AT_FindString
</UL>

<P><STRONG><a name="[d9]"></a>Delay_ms</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, timing_manage.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Delay_ms &rArr; Check_msTick
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_msTick
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_msTick
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_SwitchMode
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_IMU_Bus
</UL>

<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, timing_manage.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[b0]"></a>TFTSevice_ShowDialogYesNo</STRONG> (Thumb, 400 bytes, Stack size 184 bytes, tftservice_dialog.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = TFTSevice_ShowDialogYesNo &rArr; TouchPanel_GetPoint &rArr; TouchPanel_Filter &rArr; Read_XPT2046 &rArr; WR_CMD
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchPanel_GetPoint
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_RegionEvent
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_Button_08x16
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dialog_RenderText
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Event_SwitchPWR
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Event_Connect
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_Event_Solve
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_Event_Check
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_Event_NewGame
</UL>

<P><STRONG><a name="[b5]"></a>TFTSevice_ShowDialogOK</STRONG> (Thumb, 244 bytes, Stack size 104 bytes, tftservice_dialog.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = TFTSevice_ShowDialogOK &rArr; TouchPanel_GetPoint &rArr; TouchPanel_Filter &rArr; Read_XPT2046 &rArr; WR_CMD
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchPanel_GetPoint
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_RegionEvent
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_Button_08x16
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dialog_RenderText
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_ATConfirm
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_Event_Solve
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Window
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUWindow_ErrorConfirm
</UL>

<P><STRONG><a name="[13f]"></a>TFT_Draw_BlurScreen</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, tftservice_draw.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_SetPixelSafe
</UL>

<P><STRONG><a name="[140]"></a>TFT_DrawTwoPointLine</STRONG> (Thumb, 414 bytes, Stack size 48 bytes, tftservice_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = TFT_DrawTwoPointLine &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_SetPixelSafe
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawFullCircle
</UL>

<P><STRONG><a name="[ba]"></a>TFT_DrawRect</STRONG> (Thumb, 116 bytes, Stack size 40 bytes, tftservice_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = TFT_DrawRect &rArr; TFT_SetPixelSafe &rArr; TFT_SetCursorSafe
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_SetPixelSafe
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Render_Setting
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Render
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_Render
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Window
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dialog_RenderText
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUWindow_Render
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_TrackBarRender
</UL>

<P><STRONG><a name="[9f]"></a>TFT_DrawFullRect</STRONG> (Thumb, 62 bytes, Stack size 40 bytes, tftservice_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = TFT_DrawFullRect &rArr; TFT_SetPixelSafe &rArr; TFT_SetCursorSafe
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_SetPixelSafe
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTService_Keyboard
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Render_Setting
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Clear_Terminal
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Render_Main
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_PutCell
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_Render
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Window
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Render
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_TrackBarTouchRender
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTService_Keyboard_Del
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTService_Keyboard_Newline
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTService_Keyboard_RenderKey
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dialog_RenderText
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUWindow_Render
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_Render
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_TrackBarRender
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_Render
</UL>

<P><STRONG><a name="[141]"></a>TFT_DrawCircle</STRONG> (Thumb, 198 bytes, Stack size 56 bytes, tftservice_draw.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_SetPixelSafe
</UL>

<P><STRONG><a name="[bc]"></a>TFT_DrawFullCircle</STRONG> (Thumb, 170 bytes, Stack size 40 bytes, tftservice_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = TFT_DrawFullCircle &rArr; TFT_DrawTwoPointLine &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawTwoPointLine
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_PutCell
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Window
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUWindow_RenderData
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_UpdateInput
</UL>

<P><STRONG><a name="[142]"></a>TFT_DrawUniLine</STRONG> (Thumb, 194 bytes, Stack size 48 bytes, tftservice_draw.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_SetPixelSafe
</UL>

<P><STRONG><a name="[143]"></a>TFT_FillPolyLine</STRONG> (Thumb, 428 bytes, Stack size 456 bytes, tftservice_draw.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_WriteRAM_Prepare
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_WriteRAM
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_SetCursorSafe
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_SetPixelSafe
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
</UL>

<P><STRONG><a name="[1eb]"></a>TFT_Text_ShiftCursor</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, tftservice_text.o(.text), UNUSED)

<P><STRONG><a name="[1ec]"></a>TFT_Text_SetCursor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tftservice_text.o(.text), UNUSED)

<P><STRONG><a name="[149]"></a>TFT_Text_PrintChar</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, tftservice_text.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TFT_Text_PrintChar &rArr; TFT_SetPixelSafe &rArr; TFT_SetCursorSafe
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_AsciiMask
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_SetPixelSafe
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_StringProcess
</UL>

<P><STRONG><a name="[14b]"></a>TFT_Text_StringProcess</STRONG> (Thumb, 236 bytes, Stack size 40 bytes, tftservice_text.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = TFT_Text_StringProcess &rArr; TFT_Text_PrintChar &rArr; TFT_SetPixelSafe &rArr; TFT_SetCursorSafe
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_PrintChar
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_Background_Limit
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_Transparent
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_Background
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_Transparent_Limit
</UL>

<P><STRONG><a name="[5f]"></a>fputc</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, tftservice_text.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0vprintf)
</UL>
<P><STRONG><a name="[a6]"></a>TFT_Text_Background</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, tftservice_text.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = TFT_Text_Background &rArr; TFT_Text_StringProcess &rArr; TFT_Text_PrintChar &rArr; TFT_SetPixelSafe &rArr; TFT_SetCursorSafe
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_StringProcess
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_SetFont
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__c89vprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Render
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_UpdatePoint
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_Button_16x24
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_RenderCell
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Window
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_Button_08x16
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_Window
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Window
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUWindow_RenderData
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_UpdateInput
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_Render
</UL>

<P><STRONG><a name="[a0]"></a>TFT_Text_Transparent</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, tftservice_text.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = TFT_Text_Transparent &rArr; TFT_Text_StringProcess &rArr; TFT_Text_PrintChar &rArr; TFT_SetPixelSafe &rArr; TFT_SetCursorSafe
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_StringProcess
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_SetFont
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__c89vprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Render_Setting
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Render_Main
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Render
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_UpdatePoint
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_Button_16x24
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_Render
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_Button_08x16
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Render
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTService_Keyboard_RenderKey
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dialog_RenderText
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUWindow_Render
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_Render
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_Render
</UL>

<P><STRONG><a name="[f4]"></a>TFT_Text_Background_Limit</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, tftservice_text.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = TFT_Text_Background_Limit &rArr; TFT_Text_StringProcess &rArr; TFT_Text_PrintChar &rArr; TFT_SetPixelSafe &rArr; TFT_SetCursorSafe
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_StringProcess
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_SetFont
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__c89vprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Render_Main_Terminal
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTService_Keyboard_Del
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTService_Keyboard_Newline
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTService_Keyboard_Add
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dialog_RenderText
</UL>

<P><STRONG><a name="[14e]"></a>TFT_Text_Transparent_Limit</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, tftservice_text.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = TFT_Text_Transparent_Limit &rArr; TFT_Text_StringProcess &rArr; TFT_Text_PrintChar &rArr; TFT_SetPixelSafe &rArr; TFT_SetCursorSafe
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_StringProcess
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_SetFont
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__c89vprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTService_Keyboard
</UL>

<P><STRONG><a name="[e3]"></a>TFTService_Keyboard</STRONG> (Thumb, 656 bytes, Stack size 64 bytes, tftservice_keyboard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = TFTService_Keyboard &rArr; TouchPanel_GetPoint &rArr; TouchPanel_Filter &rArr; Read_XPT2046 &rArr; WR_CMD
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_Button_16x24
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchPanel_GetPoint
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawFullRect
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Clear
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_RegionEvent
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTService_Keyboard_Del
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTService_Keyboard_Newline
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTService_Keyboard_Add
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTService_Keyboard_RenderKey
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_Keyboard_KeyEvent
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_Keyboard_Layout
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_Transparent_Limit
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Event_SETTINGButton
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Event_Connect
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUWindow_ButtonEvent
</UL>

<P><STRONG><a name="[11a]"></a>TFTService_Keyboard_StringToInt64</STRONG> (Thumb, 82 bytes, Stack size 20 bytes, tftservice_keyboard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TFTService_Keyboard_StringToInt64
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUWindow_ButtonEvent
</UL>

<P><STRONG><a name="[156]"></a>TFTSevice_TrackBarTouchRender</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, tftservice_trackbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = TFTSevice_TrackBarTouchRender &rArr; TFT_DrawFullRect &rArr; TFT_SetPixelSafe &rArr; TFT_SetCursorSafe
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawFullRect
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_TrackBarValueRender
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_TrackBarEvent
</UL>

<P><STRONG><a name="[104]"></a>TFTSevice_TrackBarEvent</STRONG> (Thumb, 292 bytes, Stack size 24 bytes, tftservice_trackbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = TFTSevice_TrackBarEvent &rArr; TFTSevice_TrackBarTouchRender &rArr; TFT_DrawFullRect &rArr; TFT_SetPixelSafe &rArr; TFT_SetCursorSafe
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_TrackBarTouchRender
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_TouchProcess
</UL>

<P><STRONG><a name="[106]"></a>TFTSevice_TrackBarValueRender</STRONG> (Thumb, 194 bytes, Stack size 32 bytes, tftservice_trackbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = TFTSevice_TrackBarValueRender &rArr; TFTSevice_TrackBarTouchRender &rArr; TFT_DrawFullRect &rArr; TFT_SetPixelSafe &rArr; TFT_SetCursorSafe
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_TrackBarTouchRender
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_TrackBarRender
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_InputProcess
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_ButtonEvent
</UL>

<P><STRONG><a name="[100]"></a>TFTSevice_TrackBarRender</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, tftservice_trackbar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = TFTSevice_TrackBarRender &rArr; TFTSevice_TrackBarValueRender &rArr; TFTSevice_TrackBarTouchRender &rArr; TFT_DrawFullRect &rArr; TFT_SetPixelSafe &rArr; TFT_SetCursorSafe
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawRect
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawFullRect
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_TrackBarValueRender
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_Render
</UL>

<P><STRONG><a name="[a4]"></a>TFTSevice_RegionEvent</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, tftservice_button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TFTSevice_RegionEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTService_Keyboard
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Event_SETTINGProcess
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_TouchEvent_Process
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_ButtonProcess
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_ShowDialogYesNo
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_ShowDialogOK
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_Event_NewGame
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_TouchEvent_Process
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_ButtonProcess
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUWindow_TouchProcess
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_ChoiceProcess
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_ButtonProcess
</UL>

<P><STRONG><a name="[b1]"></a>TFTSevice_Button_16x24</STRONG> (Thumb, 194 bytes, Stack size 24 bytes, tftservice_button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = TFTSevice_Button_16x24 &rArr; TFT_Text_Transparent &rArr; TFT_Text_StringProcess &rArr; TFT_Text_PrintChar &rArr; TFT_SetPixelSafe &rArr; TFT_SetCursorSafe
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_Transparent
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_Background
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTService_Keyboard
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_Event_Board
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_Event_NewGame
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_TouchEvent_Process
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_Render
</UL>

<P><STRONG><a name="[a1]"></a>TFTSevice_Button_08x16</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, tftservice_button.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = TFTSevice_Button_08x16 &rArr; TFT_Text_Transparent &rArr; TFT_Text_StringProcess &rArr; TFT_Text_PrintChar &rArr; TFT_SetPixelSafe &rArr; TFT_SetCursorSafe
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_Transparent
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_Background
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Render_Setting
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Event_Button
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Event_SETTINGProcess
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_TouchEvent_Process
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Render_Status
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Render_Main
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_ButtonProcess
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Render
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_ShowDialogYesNo
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_ShowDialogOK
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_ButtonProcess
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Render
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUWindow_TouchProcess
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUWindow_ButtonEvent
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUWindow_Render
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_ChoiceProcess
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_Render
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_ButtonProcess
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_Render
</UL>

<P><STRONG><a name="[68]"></a>TouchPanel_Initialize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tft_touchpanel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = TouchPanel_Initialize &rArr; XPT2046_Initialize &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XPT2046_Initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[158]"></a>TouchPanel_Filter</STRONG> (Thumb, 234 bytes, Stack size 48 bytes, tft_touchpanel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = TouchPanel_Filter &rArr; Read_XPT2046 &rArr; WR_CMD
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_XPT2046
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchPanel_GetPoint
</UL>

<P><STRONG><a name="[15a]"></a>TouchPanel_CheckEvent</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, tft_touchpanel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TouchPanel_CheckEvent &rArr; XPT2046_IRQRead
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_Flash
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XPT2046_IRQRead
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchPanel_GetPoint
</UL>

<P><STRONG><a name="[a3]"></a>TouchPanel_GetPoint</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, tft_touchpanel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = TouchPanel_GetPoint &rArr; TouchPanel_Filter &rArr; Read_XPT2046 &rArr; WR_CMD
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchPanel_CheckEvent
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchPanel_Filter
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTService_Keyboard
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Event_SETTINGProcess
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_TouchEvent_Process
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_ButtonProcess
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_ShowDialogYesNo
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_ShowDialogOK
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_Event_NewGame
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_TouchEvent_Process
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Window
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_ButtonProcess
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUWindow_TouchProcess
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_ChoiceProcess
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_ButtonProcess
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_TouchProcess
</UL>

<P><STRONG><a name="[147]"></a>TFT_WriteRAM_Prepare</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, tft_ssd1289.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_FillPolyLine
</UL>

<P><STRONG><a name="[148]"></a>TFT_WriteRAM</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tft_ssd1289.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_FillPolyLine
</UL>

<P><STRONG><a name="[160]"></a>TFT_WriteReg</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tft_ssd1289.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Init
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_WriteBMP
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_SetDisplayWindow
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_SetCursor
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DisplayOff
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DisplayOn
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_SetCursorSafe
</UL>

<P><STRONG><a name="[15f]"></a>TFT_DisplayOn</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tft_ssd1289.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_WriteReg
</UL>

<P><STRONG><a name="[161]"></a>TFT_DisplayOff</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tft_ssd1289.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_WriteReg
</UL>

<P><STRONG><a name="[146]"></a>TFT_SetCursorSafe</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, tft_ssd1289.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TFT_SetCursorSafe
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_FillPolyLine
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_SetPixelSafe
</UL>

<P><STRONG><a name="[111]"></a>TFT_SetPixelSafe</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, tft_ssd1289.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TFT_SetPixelSafe &rArr; TFT_SetCursorSafe
</UL>
<BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_SetCursorSafe
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawRect
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Window
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawFullRect
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_PrintChar
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_FillPolyLine
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawUniLine
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawCircle
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawTwoPointLine
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Draw_BlurScreen
</UL>

<P><STRONG><a name="[162]"></a>TFT_SetCursor</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, tft_ssd1289.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TFT_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Clear
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_SetDisplayWindow
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Pixel
</UL>

<P><STRONG><a name="[9e]"></a>TFT_Clear</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, tft_ssd1289.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TFT_Clear &rArr; TFT_SetCursor
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_SetCursor
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTService_Keyboard
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Render_Main
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Render
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_Render
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Window
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Render
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUWindow_Render
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_Render
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_Render
</UL>

<P><STRONG><a name="[163]"></a>TFT_Pixel</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, tft_ssd1289.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_SetCursor
</UL>

<P><STRONG><a name="[164]"></a>TFT_SetDisplayWindow</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, tft_ssd1289.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_SetCursor
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_WriteBMP
</UL>

<P><STRONG><a name="[165]"></a>TFT_WriteBMP</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, tft_ssd1289.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_SetDisplayWindow
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_WriteReg
</UL>

<P><STRONG><a name="[67]"></a>TFT_Init</STRONG> (Thumb, 522 bytes, Stack size 32 bytes, tft_ssd1289.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = TFT_Init &rArr; TFT_FSMCConfig &rArr; FSMC_NORSRAMInit
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare2
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_TIMER_PWM
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_TIMER
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_WriteReg
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_FSMCConfig
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_CtrlLinesConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[15b]"></a>XPT2046_IRQRead</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, tft_xpt2046.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = XPT2046_IRQRead
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_XPT2046
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchPanel_CheckEvent
</UL>

<P><STRONG><a name="[159]"></a>Read_XPT2046</STRONG> (Thumb, 332 bytes, Stack size 112 bytes, tft_xpt2046.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Read_XPT2046 &rArr; WR_CMD
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WR_CMD
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RD_AD
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XPT2046_IRQRead
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchPanel_Filter
</UL>

<P><STRONG><a name="[157]"></a>XPT2046_Initialize</STRONG> (Thumb, 290 bytes, Stack size 56 bytes, tft_xpt2046.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = XPT2046_Initialize &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchPanel_Initialize
</UL>

<P><STRONG><a name="[65]"></a>ADC_Iinitialize</STRONG> (Thumb, 272 bytes, Stack size 128 bytes, dev_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = ADC_Iinitialize &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SoftwareStartConv
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RegularChannelConfig
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMARequestAfterLastTransferCmd
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMACmd
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_CommonInit
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6b]"></a>ADC_Get</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, dev_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ADC_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joystick_BY
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joystick_BX
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joystick_AY
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Joystick_AX
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Voltage
</UL>

<P><STRONG><a name="[18a]"></a>__I2C_Debug__</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, dev_i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream7_IRQHandler
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream2_IRQHandler
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream6_IRQHandler
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream0_IRQHandler
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Interupt
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Request
</UL>

<P><STRONG><a name="[130]"></a>Initialize_I2C</STRONG> (Thumb, 414 bytes, Stack size 56 bytes, dev_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Initialize_I2C &rArr; I2C_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ITConfig
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_DeInit
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_DMACmd
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Cmd
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ITConfig
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_IMU_Bus
</UL>

<P><STRONG><a name="[188]"></a>I2C_DMA_Config</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, dev_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = I2C_DMA_Config &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Request
</UL>

<P><STRONG><a name="[124]"></a>I2C_BUSY_Check</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, dev_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = I2C_BUSY_Check &rArr; I2C_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_msTick
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetFlagStatus
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_msTick
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Request
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RegWrite
</UL>

<P><STRONG><a name="[123]"></a>I2C_Request</STRONG> (Thumb, 320 bytes, Stack size 40 bytes, dev_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = I2C_Request &rArr; I2C_BUSY_Check &rArr; I2C_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ITConfig
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTART
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_DMALastTransferCmd
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_AcknowledgeConfig
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_DMA_Config
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__I2C_Debug__
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_BUSY_Check
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Read
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RegWrite
</UL>

<P><STRONG><a name="[18e]"></a>I2C_Interupt</STRONG> (Thumb, 426 bytes, Stack size 16 bytes, dev_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_Interupt
</UL>
<BR>[Calls]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendData
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Send7bitAddress
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReceiveData
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetLastEvent
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTOP
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTART
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_AcknowledgeConfig
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__I2C_Debug__
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_EV_IRQHandler
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_EV_IRQHandler
</UL>

<P><STRONG><a name="[15]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, dev_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = DMA1_Stream0_IRQHandler &rArr; DMA_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTOP
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetITStatus
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearITPendingBit
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__I2C_Debug__
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[196]"></a>I2C_LAST_TRANSMIT_Check</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, dev_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = I2C_LAST_TRANSMIT_Check &rArr; I2C_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_msTick
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetFlagStatus
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_msTick
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream7_IRQHandler
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream6_IRQHandler
</UL>

<P><STRONG><a name="[1b]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dev_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = DMA1_Stream6_IRQHandler &rArr; I2C_LAST_TRANSMIT_Check &rArr; I2C_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTOP
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetITStatus
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearITPendingBit
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_LAST_TRANSMIT_Check
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__I2C_Debug__
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, dev_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = DMA1_Stream2_IRQHandler &rArr; DMA_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTOP
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetITStatus
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearITPendingBit
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__I2C_Debug__
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, dev_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = DMA1_Stream7_IRQHandler &rArr; I2C_LAST_TRANSMIT_Check &rArr; I2C_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTOP
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetITStatus
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearITPendingBit
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_LAST_TRANSMIT_Check
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__I2C_Debug__
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dev_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C1_EV_IRQHandler &rArr; I2C_Interupt
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Interupt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dev_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C2_EV_IRQHandler &rArr; I2C_Interupt
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Interupt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, dev_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C1_ER_IRQHandler &rArr; I2C_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetITStatus
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, dev_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C2_ER_IRQHandler &rArr; I2C_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetITStatus
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[199]"></a>I2C_EVENT_Check</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, dev_i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_msTick
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_CheckEvent
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_msTick
</UL>

<P><STRONG><a name="[7e]"></a>Initialize_TIMER</STRONG> (Thumb, 212 bytes, Stack size 32 bytes, dev_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Initialize_TIMER &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_Initialize
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_Timer
</UL>

<P><STRONG><a name="[7f]"></a>Initialize_TIMER_PWM</STRONG> (Thumb, 152 bytes, Stack size 56 bytes, dev_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Initialize_TIMER_PWM &rArr; TIM_OC4Init
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OCStructInit
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC4Init
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3Init
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2Init
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1Init
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BDTRStructInit
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_BDTRConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_Initialize
</UL>

<P><STRONG><a name="[13d]"></a>Initialize_TIMER_INTERRUPT</STRONG> (Thumb, 268 bytes, Stack size 32 bytes, dev_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Initialize_TIMER_INTERRUPT &rArr; TIM_OC4Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC4Init
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3Init
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2Init
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1Init
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_Timer
</UL>

<P><STRONG><a name="[25]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dev_timer.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dev_timer.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dev_timer.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dev_timer.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIM5_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dev_timer.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dev_timer.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM7_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dev_timer.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dev_timer.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dev_timer.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, dev_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM1_UP_TIM10_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare1
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetCapture1
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, dev_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TIM1_TRG_COM_TIM11_IRQHandler &rArr; RGB_Process &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare1
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_Process
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetCapture1
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[d2]"></a>USART_OpenPort</STRONG> (Thumb, 556 bytes, Stack size 56 bytes, dev_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = USART_OpenPort &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ITConfig
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DMACmd
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_SetupUART
</UL>

<P><STRONG><a name="[1ab]"></a>USART_DMA_Set</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, dev_usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ITConfig
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
</UL>

<P><STRONG><a name="[d0]"></a>USART_Interrupt_Set</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, dev_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_Interrupt_Set &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_SetupUART
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_PrepareRX
</UL>

<P><STRONG><a name="[1ed]"></a>UART3_RX_DMA_IT</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dev_usart.o(.text), UNUSED)

<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, dev_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USART1_IRQHandler &rArr; USART_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>CRYP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>FSMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>HASH_RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>SystemInit</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, system_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(.text)
</UL>
<P><STRONG><a name="[1ee]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, system_stm32f4xx.o(.text), UNUSED)

<P><STRONG><a name="[182]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_OpenPort
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_TIMER_INTERRUPT
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_I2C
</UL>

<P><STRONG><a name="[183]"></a>NVIC_Init</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, misc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_OpenPort
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_TIMER_INTERRUPT
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_I2C
</UL>

<P><STRONG><a name="[1ef]"></a>NVIC_SetVectorTable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[1f0]"></a>NVIC_SystemLPConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[1f1]"></a>SysTick_CLKSourceConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, misc.o(.text), UNUSED)

<P><STRONG><a name="[178]"></a>ADC_DeInit</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f4xx_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Iinitialize
</UL>

<P><STRONG><a name="[179]"></a>ADC_Init</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, stm32f4xx_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ADC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Iinitialize
</UL>

<P><STRONG><a name="[1f2]"></a>ADC_StructInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[177]"></a>ADC_CommonInit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32f4xx_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_CommonInit
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Iinitialize
</UL>

<P><STRONG><a name="[1f3]"></a>ADC_CommonStructInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[17d]"></a>ADC_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Iinitialize
</UL>

<P><STRONG><a name="[1f4]"></a>ADC_AnalogWatchdogCmd</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[1f5]"></a>ADC_AnalogWatchdogThresholdsConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[1f6]"></a>ADC_AnalogWatchdogSingleChannelConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[1f7]"></a>ADC_TempSensorVrefintCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[1f8]"></a>ADC_VBATCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[17a]"></a>ADC_RegularChannelConfig</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, stm32f4xx_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADC_RegularChannelConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Iinitialize
</UL>

<P><STRONG><a name="[17e]"></a>ADC_SoftwareStartConv</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Iinitialize
</UL>

<P><STRONG><a name="[1f9]"></a>ADC_GetSoftwareStartConvStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[1fa]"></a>ADC_EOCOnEachRegularChannelCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[1fb]"></a>ADC_ContinuousModeCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[1fc]"></a>ADC_DiscModeChannelCountConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[1fd]"></a>ADC_DiscModeCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[1fe]"></a>ADC_GetConversionValue</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[1ff]"></a>ADC_GetMultiModeConversionValue</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[17c]"></a>ADC_DMACmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Iinitialize
</UL>

<P><STRONG><a name="[17b]"></a>ADC_DMARequestAfterLastTransferCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Iinitialize
</UL>

<P><STRONG><a name="[200]"></a>ADC_MultiModeDMARequestAfterLastTransferCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[201]"></a>ADC_InjectedChannelConfig</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[202]"></a>ADC_InjectedSequencerLengthConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[203]"></a>ADC_SetInjectedOffset</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[204]"></a>ADC_ExternalTrigInjectedConvConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[205]"></a>ADC_ExternalTrigInjectedConvEdgeConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[206]"></a>ADC_SoftwareStartInjectedConv</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[207]"></a>ADC_GetSoftwareStartInjectedConvCmdStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[208]"></a>ADC_AutoInjectedConvCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[209]"></a>ADC_InjectedDiscModeCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[20a]"></a>ADC_GetInjectedConversionValue</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[20b]"></a>ADC_ITConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[20c]"></a>ADC_GetFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[20d]"></a>ADC_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[20e]"></a>ADC_GetITStatus</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[20f]"></a>ADC_ClearITPendingBit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_adc.o(.text), UNUSED)

<P><STRONG><a name="[186]"></a>DMA_DeInit</STRONG> (Thumb, 272 bytes, Stack size 28 bytes, stm32f4xx_dma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = DMA_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_OpenPort
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_I2C
</UL>

<P><STRONG><a name="[175]"></a>DMA_Init</STRONG> (Thumb, 80 bytes, Stack size 12 bytes, stm32f4xx_dma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_OpenPort
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Iinitialize
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_DMA_Config
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_I2C
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DMA_Set
</UL>

<P><STRONG><a name="[210]"></a>DMA_StructInit</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text), UNUSED)

<P><STRONG><a name="[176]"></a>DMA_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_OpenPort
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Iinitialize
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream7_IRQHandler
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream2_IRQHandler
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream6_IRQHandler
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream0_IRQHandler
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Interupt
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DMA_Set
</UL>

<P><STRONG><a name="[211]"></a>DMA_PeriphIncOffsetSizeConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text), UNUSED)

<P><STRONG><a name="[212]"></a>DMA_FlowControllerConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text), UNUSED)

<P><STRONG><a name="[213]"></a>DMA_SetCurrDataCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text), UNUSED)

<P><STRONG><a name="[214]"></a>DMA_GetCurrDataCounter</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text), UNUSED)

<P><STRONG><a name="[215]"></a>DMA_DoubleBufferModeConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text), UNUSED)

<P><STRONG><a name="[216]"></a>DMA_DoubleBufferModeCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text), UNUSED)

<P><STRONG><a name="[217]"></a>DMA_MemoryTargetConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text), UNUSED)

<P><STRONG><a name="[218]"></a>DMA_GetCurrentMemoryTarget</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text), UNUSED)

<P><STRONG><a name="[219]"></a>DMA_GetCmdStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text), UNUSED)

<P><STRONG><a name="[21a]"></a>DMA_GetFIFOStatus</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text), UNUSED)

<P><STRONG><a name="[21b]"></a>DMA_GetFlagStatus</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text), UNUSED)

<P><STRONG><a name="[21c]"></a>DMA_ClearFlag</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text), UNUSED)

<P><STRONG><a name="[185]"></a>DMA_ITConfig</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_OpenPort
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_I2C
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DMA_Set
</UL>

<P><STRONG><a name="[194]"></a>DMA_GetITStatus</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, stm32f4xx_dma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = DMA_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream7_IRQHandler
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream2_IRQHandler
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream6_IRQHandler
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream0_IRQHandler
</UL>

<P><STRONG><a name="[195]"></a>DMA_ClearITPendingBit</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream7_IRQHandler
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream2_IRQHandler
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream6_IRQHandler
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream0_IRQHandler
</UL>

<P><STRONG><a name="[1b0]"></a>GPIO_DeInit</STRONG> (Thumb, 192 bytes, Stack size 8 bytes, stm32f4xx_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphResetCmd
</UL>

<P><STRONG><a name="[7c]"></a>GPIO_Init</STRONG> (Thumb, 120 bytes, Stack size 20 bytes, stm32f4xx_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup_BUTTON
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_Initialize
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Initialize
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Iinitialize
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_CtrlLinesConfig
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XPT2046_Initialize
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_IMU_Bus
</UL>

<P><STRONG><a name="[21d]"></a>GPIO_StructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[21e]"></a>GPIO_PinLockConfig</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[89]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_GetSttPin
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INPUT_ReadList
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;INPUT_Read
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XPT2046_IRQRead
</UL>

<P><STRONG><a name="[21f]"></a>GPIO_ReadInputData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[ca]"></a>GPIO_ReadOutputDataBit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_GetKeyPin
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_SetKeyPin
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_SetPwrPin
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_GetPwrPin
</UL>

<P><STRONG><a name="[220]"></a>GPIO_ReadOutputData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[171]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XPT2046_Initialize
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_XPT2046
</UL>

<P><STRONG><a name="[16f]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_XPT2046
</UL>

<P><STRONG><a name="[d4]"></a>GPIO_WriteBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_SetKeyPin
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_SetPwrPin
</UL>

<P><STRONG><a name="[221]"></a>GPIO_Write</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[222]"></a>GPIO_ToggleBits</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(.text), UNUSED)

<P><STRONG><a name="[7d]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4xx_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_Initialize
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Initialize
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_CtrlLinesConfig
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XPT2046_Initialize
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_IMU_Bus
</UL>

<P><STRONG><a name="[17f]"></a>I2C_DeInit</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, stm32f4xx_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_I2C
</UL>

<P><STRONG><a name="[180]"></a>I2C_Init</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, stm32f4xx_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = I2C_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_I2C
</UL>

<P><STRONG><a name="[223]"></a>I2C_StructInit</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[181]"></a>I2C_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_I2C
</UL>

<P><STRONG><a name="[18d]"></a>I2C_GenerateSTART</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Interupt
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Request
</UL>

<P><STRONG><a name="[192]"></a>I2C_GenerateSTOP</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream7_IRQHandler
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream2_IRQHandler
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream6_IRQHandler
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream0_IRQHandler
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Interupt
</UL>

<P><STRONG><a name="[191]"></a>I2C_Send7bitAddress</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Interupt
</UL>

<P><STRONG><a name="[18b]"></a>I2C_AcknowledgeConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Interupt
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Request
</UL>

<P><STRONG><a name="[224]"></a>I2C_OwnAddress2Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[225]"></a>I2C_DualAddressCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[226]"></a>I2C_GeneralCallCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[227]"></a>I2C_SoftwareResetCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[228]"></a>I2C_StretchClockCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[229]"></a>I2C_FastModeDutyCycleConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[22a]"></a>I2C_NACKPositionConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[22b]"></a>I2C_SMBusAlertConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[22c]"></a>I2C_ARPCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[190]"></a>I2C_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Interupt
</UL>

<P><STRONG><a name="[193]"></a>I2C_ReceiveData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Interupt
</UL>

<P><STRONG><a name="[22d]"></a>I2C_TransmitPEC</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[22e]"></a>I2C_PECPositionConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[22f]"></a>I2C_CalculatePEC</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[230]"></a>I2C_GetPEC</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[187]"></a>I2C_DMACmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_I2C
</UL>

<P><STRONG><a name="[18c]"></a>I2C_DMALastTransferCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Request
</UL>

<P><STRONG><a name="[231]"></a>I2C_ReadRegister</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, stm32f4xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[184]"></a>I2C_ITConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_I2C
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Request
</UL>

<P><STRONG><a name="[19a]"></a>I2C_CheckEvent</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_EVENT_Check
</UL>

<P><STRONG><a name="[18f]"></a>I2C_GetLastEvent</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Interupt
</UL>

<P><STRONG><a name="[189]"></a>I2C_GetFlagStatus</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, stm32f4xx_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = I2C_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_LAST_TRANSMIT_Check
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_BUSY_Check
</UL>

<P><STRONG><a name="[232]"></a>I2C_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(.text), UNUSED)

<P><STRONG><a name="[197]"></a>I2C_GetITStatus</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, stm32f4xx_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_ER_IRQHandler
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_ER_IRQHandler
</UL>

<P><STRONG><a name="[198]"></a>I2C_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C2_ER_IRQHandler
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_ER_IRQHandler
</UL>

<P><STRONG><a name="[233]"></a>RCC_DeInit</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[234]"></a>RCC_HSEConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1b5]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_WaitForHSEStartUp
</UL>

<P><STRONG><a name="[1b4]"></a>RCC_WaitForHSEStartUp</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, stm32f4xx_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
</UL>

<P><STRONG><a name="[235]"></a>RCC_AdjustHSICalibrationValue</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[236]"></a>RCC_HSICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[237]"></a>RCC_LSEConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[238]"></a>RCC_LSICmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[239]"></a>RCC_PLLConfig</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[23a]"></a>RCC_PLLCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[23b]"></a>RCC_PLLI2SConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[23c]"></a>RCC_PLLI2SCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[23d]"></a>RCC_ClockSecuritySystemCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[23e]"></a>RCC_MCO1Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[23f]"></a>RCC_MCO2Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[240]"></a>RCC_SYSCLKConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[241]"></a>RCC_GetSYSCLKSource</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[242]"></a>RCC_HCLKConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[243]"></a>RCC_PCLK1Config</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[244]"></a>RCC_PCLK2Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1b3]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, stm32f4xx_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[245]"></a>RCC_RTCCLKConfig</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[246]"></a>RCC_RTCCLKCmd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[247]"></a>RCC_BackupResetCmd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[248]"></a>RCC_I2SCLKConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[7b]"></a>RCC_AHB1PeriphClockCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_OpenPort
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup_BUTTON
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_Initialize
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Initialize
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Iinitialize
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_CtrlLinesConfig
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XPT2046_Initialize
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_I2C
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_IMU_Bus
</UL>

<P><STRONG><a name="[249]"></a>RCC_AHB2PeriphClockCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[15e]"></a>RCC_AHB3PeriphClockCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_CtrlLinesConfig
</UL>

<P><STRONG><a name="[172]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_OpenPort
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_TIMER
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XPT2046_Initialize
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_I2C
</UL>

<P><STRONG><a name="[167]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_OpenPort
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_TIMER
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Init
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Iinitialize
</UL>

<P><STRONG><a name="[1b1]"></a>RCC_AHB1PeriphResetCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DeInit
</UL>

<P><STRONG><a name="[24a]"></a>RCC_AHB2PeriphResetCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[24b]"></a>RCC_AHB3PeriphResetCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1b2]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_DeInit
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
</UL>

<P><STRONG><a name="[1af]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DeInit
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DeInit
</UL>

<P><STRONG><a name="[24c]"></a>RCC_AHB1PeriphClockLPModeCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[24d]"></a>RCC_AHB2PeriphClockLPModeCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[24e]"></a>RCC_AHB3PeriphClockLPModeCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[24f]"></a>RCC_APB1PeriphClockLPModeCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[250]"></a>RCC_APB2PeriphClockLPModeCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[251]"></a>RCC_ITConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[252]"></a>RCC_ClearFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[253]"></a>RCC_GetITStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[254]"></a>RCC_ClearITPendingBit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1b6]"></a>TIM_DeInit</STRONG> (Thumb, 284 bytes, Stack size 8 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[19b]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 96 bytes, Stack size 12 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_TimeBaseInit
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_TIMER
</UL>

<P><STRONG><a name="[255]"></a>TIM_TimeBaseStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[256]"></a>TIM_PrescalerConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[257]"></a>TIM_CounterModeConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[258]"></a>TIM_SetCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[259]"></a>TIM_SetAutoreload</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[25a]"></a>TIM_GetCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[25b]"></a>TIM_GetPrescaler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[25c]"></a>TIM_UpdateDisableConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[25d]"></a>TIM_UpdateRequestConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[25e]"></a>TIM_ARRPreloadConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[25f]"></a>TIM_SelectOnePulseMode</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[260]"></a>TIM_SetClockDivision</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[80]"></a>TIM_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_Initialize
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_Timer
</UL>

<P><STRONG><a name="[19d]"></a>TIM_OC1Init</STRONG> (Thumb, 88 bytes, Stack size 12 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_OC1Init
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_TIMER_PWM
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_TIMER_INTERRUPT
</UL>

<P><STRONG><a name="[19e]"></a>TIM_OC2Init</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC2Init
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_TIMER_PWM
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_TIMER_INTERRUPT
</UL>

<P><STRONG><a name="[19f]"></a>TIM_OC3Init</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC3Init
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_TIMER_PWM
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_TIMER_INTERRUPT
</UL>

<P><STRONG><a name="[1a0]"></a>TIM_OC4Init</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC4Init
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_TIMER_PWM
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_TIMER_INTERRUPT
</UL>

<P><STRONG><a name="[19c]"></a>TIM_OCStructInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_TIMER_PWM
</UL>

<P><STRONG><a name="[261]"></a>TIM_SelectOCxM</STRONG> (Thumb, 130 bytes, Stack size 12 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[78]"></a>TIM_SetCompare1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_Process
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_Update
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_TRG_COM_TIM11_IRQHandler
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_UP_TIM10_IRQHandler
</UL>

<P><STRONG><a name="[77]"></a>TIM_SetCompare2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_Process
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_Update
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Init
</UL>

<P><STRONG><a name="[76]"></a>TIM_SetCompare3</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_Process
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_Update
</UL>

<P><STRONG><a name="[262]"></a>TIM_SetCompare4</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[263]"></a>TIM_ForcedOC1Config</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[264]"></a>TIM_ForcedOC2Config</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[265]"></a>TIM_ForcedOC3Config</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[266]"></a>TIM_ForcedOC4Config</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[267]"></a>TIM_OC1PreloadConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[268]"></a>TIM_OC2PreloadConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[269]"></a>TIM_OC3PreloadConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[26a]"></a>TIM_OC4PreloadConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[26b]"></a>TIM_OC1FastConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[26c]"></a>TIM_OC2FastConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[26d]"></a>TIM_OC3FastConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[26e]"></a>TIM_OC4FastConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[26f]"></a>TIM_ClearOC1Ref</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[270]"></a>TIM_ClearOC2Ref</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[271]"></a>TIM_ClearOC3Ref</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[272]"></a>TIM_ClearOC4Ref</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[273]"></a>TIM_OC1PolarityConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[274]"></a>TIM_OC1NPolarityConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[275]"></a>TIM_OC2PolarityConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[276]"></a>TIM_OC2NPolarityConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[277]"></a>TIM_OC3PolarityConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[278]"></a>TIM_OC3NPolarityConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[279]"></a>TIM_OC4PolarityConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[27a]"></a>TIM_CCxCmd</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[27b]"></a>TIM_CCxNCmd</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1b8]"></a>TIM_SetIC4Prescaler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[1bd]"></a>TIM_SetIC3Prescaler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[1bc]"></a>TIM_SetIC2Prescaler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[1ba]"></a>TIM_SetIC1Prescaler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[1b7]"></a>TIM_ICInit</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC1Prescaler
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC2Prescaler
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC3Prescaler
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC4Prescaler
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
</UL>

<P><STRONG><a name="[27c]"></a>TIM_ICStructInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1be]"></a>TIM_PWMIConfig</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC1Prescaler
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC2Prescaler
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
</UL>

<P><STRONG><a name="[1a6]"></a>TIM_GetCapture1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_TRG_COM_TIM11_IRQHandler
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_UP_TIM10_IRQHandler
</UL>

<P><STRONG><a name="[27d]"></a>TIM_GetCapture2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[27e]"></a>TIM_GetCapture3</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[27f]"></a>TIM_GetCapture4</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1a2]"></a>TIM_BDTRConfig</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_BDTRConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_TIMER_PWM
</UL>

<P><STRONG><a name="[1a1]"></a>TIM_BDTRStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_TIMER_PWM
</UL>

<P><STRONG><a name="[280]"></a>TIM_CtrlPWMOutputs</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[281]"></a>TIM_SelectCOM</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[282]"></a>TIM_CCPreloadControl</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1a3]"></a>TIM_ITConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_TIMER_INTERRUPT
</UL>

<P><STRONG><a name="[283]"></a>TIM_GenerateEvent</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[284]"></a>TIM_GetFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[285]"></a>TIM_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1a4]"></a>TIM_GetITStatus</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_TRG_COM_TIM11_IRQHandler
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_UP_TIM10_IRQHandler
</UL>

<P><STRONG><a name="[1a5]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_TRG_COM_TIM11_IRQHandler
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_UP_TIM10_IRQHandler
</UL>

<P><STRONG><a name="[286]"></a>TIM_DMAConfig</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[287]"></a>TIM_DMACmd</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[288]"></a>TIM_SelectCCDMA</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[289]"></a>TIM_InternalClockConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1c0]"></a>TIM_SelectInputTrigger</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITRxExternalClockConfig
</UL>

<P><STRONG><a name="[1bf]"></a>TIM_ITRxExternalClockConfig</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectInputTrigger
</UL>

<P><STRONG><a name="[1c1]"></a>TIM_TIxExternalClockConfig</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SelectInputTrigger
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
</UL>

<P><STRONG><a name="[1c3]"></a>TIM_ETRConfig</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRClockMode2Config
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRClockMode1Config
</UL>

<P><STRONG><a name="[1c2]"></a>TIM_ETRClockMode1Config</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRConfig
</UL>

<P><STRONG><a name="[1c4]"></a>TIM_ETRClockMode2Config</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETRConfig
</UL>

<P><STRONG><a name="[28a]"></a>TIM_SelectOutputTrigger</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[28b]"></a>TIM_SelectSlaveMode</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[28c]"></a>TIM_SelectMasterSlaveMode</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[28d]"></a>TIM_EncoderInterfaceConfig</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[28e]"></a>TIM_SelectHallSensor</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[28f]"></a>TIM_RemapConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_tim.o(.text), UNUSED)

<P><STRONG><a name="[1c5]"></a>USART_DeInit</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, stm32f4xx_usart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[1a7]"></a>USART_Init</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, stm32f4xx_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_OpenPort
</UL>

<P><STRONG><a name="[290]"></a>USART_StructInit</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[291]"></a>USART_ClockInit</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[292]"></a>USART_ClockStructInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[1aa]"></a>USART_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_OpenPort
</UL>

<P><STRONG><a name="[293]"></a>USART_SetPrescaler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[294]"></a>USART_OverSampling8Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[295]"></a>USART_OneBitMethodCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[cd]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Send
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_SendString
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[1ad]"></a>USART_ReceiveData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[296]"></a>USART_SetAddress</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[297]"></a>USART_ReceiverWakeUpCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[298]"></a>USART_WakeUpConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[299]"></a>USART_LINBreakDetectLengthConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[29a]"></a>USART_LINCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[29b]"></a>USART_SendBreak</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[29c]"></a>USART_HalfDuplexCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[29d]"></a>USART_SetGuardTime</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[29e]"></a>USART_SmartCardCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[29f]"></a>USART_SmartCardNACKCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[2a0]"></a>USART_IrDAConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[2a1]"></a>USART_IrDACmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[1a8]"></a>USART_DMACmd</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_OpenPort
</UL>

<P><STRONG><a name="[1a9]"></a>USART_ITConfig</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stm32f4xx_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_OpenPort
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Interrupt_Set
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[cc]"></a>USART_GetFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Send
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_SendString
</UL>

<P><STRONG><a name="[2a2]"></a>USART_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[1ac]"></a>USART_GetITStatus</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, stm32f4xx_usart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[2a3]"></a>USART_ClearITPendingBit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_usart.o(.text), UNUSED)

<P><STRONG><a name="[1c6]"></a>SPI_I2S_DeInit</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, stm32f4xx_spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>

<P><STRONG><a name="[174]"></a>SPI_Init</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, stm32f4xx_spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XPT2046_Initialize
</UL>

<P><STRONG><a name="[2a4]"></a>I2S_Init</STRONG> (Thumb, 188 bytes, Stack size 20 bytes, stm32f4xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[2a5]"></a>SPI_StructInit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[2a6]"></a>I2S_StructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[173]"></a>SPI_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XPT2046_Initialize
</UL>

<P><STRONG><a name="[2a7]"></a>I2S_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[2a8]"></a>SPI_DataSizeConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[2a9]"></a>SPI_BiDirectionalLineConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[2aa]"></a>SPI_NSSInternalSoftwareConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[2ab]"></a>SPI_SSOutputCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[2ac]"></a>SPI_TIModeCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[2ad]"></a>I2S_FullDuplexConfig</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, stm32f4xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[16d]"></a>SPI_I2S_ReceiveData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WR_CMD
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RD_AD
</UL>

<P><STRONG><a name="[16c]"></a>SPI_I2S_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WR_CMD
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RD_AD
</UL>

<P><STRONG><a name="[2ae]"></a>SPI_CalculateCRC</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[2af]"></a>SPI_TransmitCRC</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[2b0]"></a>SPI_GetCRC</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[2b1]"></a>SPI_GetCRCPolynomial</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[2b2]"></a>SPI_I2S_DMACmd</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[2b3]"></a>SPI_I2S_ITConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[16b]"></a>SPI_I2S_GetFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WR_CMD
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RD_AD
</UL>

<P><STRONG><a name="[2b4]"></a>SPI_I2S_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[2b5]"></a>SPI_I2S_GetITStatus</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, stm32f4xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[2b6]"></a>SPI_I2S_ClearITPendingBit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_spi.o(.text), UNUSED)

<P><STRONG><a name="[2b7]"></a>FSMC_NORSRAMDeInit</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32f4xx_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[168]"></a>FSMC_NORSRAMInit</STRONG> (Thumb, 192 bytes, Stack size 12 bytes, stm32f4xx_fsmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = FSMC_NORSRAMInit
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_FSMCConfig
</UL>

<P><STRONG><a name="[2b8]"></a>FSMC_NORSRAMStructInit</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, stm32f4xx_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[169]"></a>FSMC_NORSRAMCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_fsmc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_FSMCConfig
</UL>

<P><STRONG><a name="[2b9]"></a>FSMC_NANDDeInit</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32f4xx_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[2ba]"></a>FSMC_NANDInit</STRONG> (Thumb, 104 bytes, Stack size 12 bytes, stm32f4xx_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[2bb]"></a>FSMC_NANDStructInit</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, stm32f4xx_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[2bc]"></a>FSMC_NANDCmd</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, stm32f4xx_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[2bd]"></a>FSMC_NANDECCCmd</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, stm32f4xx_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[2be]"></a>FSMC_GetECC</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[2bf]"></a>FSMC_PCCARDDeInit</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[2c0]"></a>FSMC_PCCARDInit</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, stm32f4xx_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[2c1]"></a>FSMC_PCCARDStructInit</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, stm32f4xx_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[2c2]"></a>FSMC_PCCARDCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[2c3]"></a>FSMC_ITConfig</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, stm32f4xx_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[2c4]"></a>FSMC_GetFlagStatus</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32f4xx_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[2c5]"></a>FSMC_ClearFlag</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32f4xx_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[2c6]"></a>FSMC_GetITStatus</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, stm32f4xx_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[2c7]"></a>FSMC_ClearITPendingBit</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32f4xx_fsmc.o(.text), UNUSED)

<P><STRONG><a name="[aa]"></a>rand</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Generate
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_UpdateSnake
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_Generate
</UL>

<P><STRONG><a name="[2c8]"></a>srand</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rand.o(.text), UNUSED)

<P><STRONG><a name="[1c8]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[2c9]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2ca]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[1c7]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[16e]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_XPT2046
</UL>

<P><STRONG><a name="[2cb]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[1c9]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[6e]"></a>__aeabi_fadd</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_UpdateSnake
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Voltage
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchPanel_Filter
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawTwoPointLine
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_Compensate
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Get_rawDATA
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_QuaternionToEuler
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_AHRS
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_TrackBarValueRender
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_TrackBarRender
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_TrackBarEvent
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_InputProcess
</UL>

<P><STRONG><a name="[109]"></a>__aeabi_fsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_Compensate
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_QuaternionToEuler
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_AHRS
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_TrackBarValueRender
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_TrackBarEvent
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_InputProcess
</UL>

<P><STRONG><a name="[136]"></a>__aeabi_frsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawTwoPointLine
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_Compensate
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_QuaternionToEuler
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_AHRS
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_TrackBarEvent
</UL>

<P><STRONG><a name="[6d]"></a>__aeabi_fmul</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_FixAngle
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_Process
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_Set
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Battery_Check
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cell_Detect
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Voltage
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchPanel_Filter
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawTwoPointLine
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_Compensate
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_EulerToQuaternion
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_QuaternionToEuler
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_AHRS
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_ChangeFreq
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_TrackBarValueRender
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_TrackBarEvent
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_InputProcess
</UL>

<P><STRONG><a name="[74]"></a>__aeabi_fdiv</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_Generate
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_UpdateSnake
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_Process
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_Set
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawTwoPointLine
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Get_rawDATA
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_Update_Data
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_AHRS
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_ChangeFreq
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_TrackBarValueRender
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_TrackBarEvent
</UL>

<P><STRONG><a name="[11f]"></a>__ARM_scalbnf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fscalb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_Process
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_EulerToQuaternion
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_QuaternionToEuler
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_AHRS
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_TrackBarRender
</UL>

<P><STRONG><a name="[2cc]"></a>scalbnf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fscalb.o(.text), UNUSED)

<P><STRONG><a name="[133]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_EulerToQuaternion
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
</UL>

<P><STRONG><a name="[135]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_EulerToQuaternion
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[1d0]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[113]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_FixAngle
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_EulerToQuaternion
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_QuaternionToEuler
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[fc]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_Compensate
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_SetInquireMode
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[10a]"></a>__aeabi_i2f</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchPanel_Filter
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawTwoPointLine
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_Compensate
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Get_rawDATA
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_Update_Data
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_AHRS
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_ChangeFreq
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_TrackBarValueRender
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_TrackBarEvent
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_InputProcess
</UL>

<P><STRONG><a name="[6c]"></a>__aeabi_ui2f</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_Process
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_Set
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Battery_Check
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cell_Detect
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Voltage
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchPanel_Filter
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawTwoPointLine
</UL>

<P><STRONG><a name="[11c]"></a>__aeabi_ul2f</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, ffltul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_ul2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_Process
</UL>

<P><STRONG><a name="[13a]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_FillPolyLine
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_Compensate
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[fb]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_FillPolyLine
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_SetInquireMode
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[101]"></a>__aeabi_f2iz</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ffixi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_Window
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchPanel_Filter
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawTwoPointLine
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_Compensate
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_Update_Data
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUWindow_RenderData
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_TrackBarValueRender
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_TrackBarEvent
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_Render
</UL>

<P><STRONG><a name="[7a]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_Process
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_SendData
</UL>

<P><STRONG><a name="[c0]"></a>__aeabi_f2ulz</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, ffixul.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Snake_UpdateSnake
</UL>

<P><STRONG><a name="[114]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_FixAngle
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[fd]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_SetInquireMode
</UL>

<P><STRONG><a name="[a5]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_FixAngle
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_Window
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RobotArm_Window
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Window
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_EulerToQuaternion
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_QuaternionToEuler
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_AHRS
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUWindow_RenderData
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Shellmo_UpdateInput
</UL>

<P><STRONG><a name="[2cd]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cdcmple.o(.text), UNUSED)

<P><STRONG><a name="[144]"></a>__aeabi_cdcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_FillPolyLine
</UL>

<P><STRONG><a name="[145]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_FillPolyLine
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[134]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_Compensate
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_EulerToQuaternion
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_QuaternionToEuler
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_AHRS
</UL>

<P><STRONG><a name="[2ce]"></a>__aeabi_cfcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cfcmple.o(.text), UNUSED)

<P><STRONG><a name="[70]"></a>__aeabi_cfcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_Process
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cell_Detect
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_TrackBarValueRender
</UL>

<P><STRONG><a name="[71]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_Process
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Battery_Check
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cell_Detect
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawTwoPointLine
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_TrackBarValueRender
</UL>

<P><STRONG><a name="[2cf]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[1e2]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[1d2]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[1cc]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2ulz
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[2d0]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[1d1]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[2d1]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[1cd]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[2d2]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[2d3]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[1cb]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[1ca]"></a>_float_epilogue</STRONG> (Thumb, 90 bytes, Stack size 4 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2f
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>

<P><STRONG><a name="[1cf]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
</UL>

<P><STRONG><a name="[1ce]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
</UL>

<P><STRONG><a name="[1d9]"></a>__ARM_scalbn</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, dscalb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[2d4]"></a>scalbn</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, dscalb.o(.text), UNUSED)

<P><STRONG><a name="[1d3]"></a>_dsqrt</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, dsqrt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[1d4]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[61]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[2d5]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[2d6]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dclz77c.o(.text), UNUSED)

<P><STRONG><a name="[2d7]"></a>__decompress2</STRONG> (Thumb, 96 bytes, Stack size unknown bytes, __dclz77c.o(.text), UNUSED)

<P><STRONG><a name="[1d6]"></a>__0vprintf</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, printfa.o(i.__0vprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[2d8]"></a>__1vprintf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, printfa.o(i.__0vprintf), UNUSED)

<P><STRONG><a name="[2d9]"></a>__2vprintf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, printfa.o(i.__0vprintf), UNUSED)

<P><STRONG><a name="[14d]"></a>__c89vprintf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, printfa.o(i.__0vprintf))
<BR><BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_Background_Limit
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_Transparent
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_Background
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_Transparent_Limit
</UL>

<P><STRONG><a name="[2da]"></a>vprintf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, printfa.o(i.__0vprintf), UNUSED)

<P><STRONG><a name="[1dd]"></a>__ARM_fpclassify</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
</UL>

<P><STRONG><a name="[1d8]"></a>__ieee754_rem_pio2</STRONG> (Thumb, 832 bytes, Stack size 136 bytes, rred.o(i.__ieee754_rem_pio2))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[1da]"></a>__kernel_cos</STRONG> (Thumb, 230 bytes, Stack size 48 bytes, cos_i.o(i.__kernel_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = __kernel_cos &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[1db]"></a>__kernel_poly</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[1dc]"></a>__kernel_sin</STRONG> (Thumb, 224 bytes, Stack size 64 bytes, sin_i.o(i.__kernel_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[1de]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __mathlib_dbl_underflow &rArr; __ARM_scalbn
</UL>
<BR>[Calls]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
</UL>

<P><STRONG><a name="[2db]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[2dc]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[2dd]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[1e3]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[138]"></a>asin</STRONG> (Thumb, 584 bytes, Stack size 56 bytes, asin.o(i.asin))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = asin &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_QuaternionToEuler
</UL>

<P><STRONG><a name="[13c]"></a>atan</STRONG> (Thumb, 478 bytes, Stack size 40 bytes, atan.o(i.atan))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = atan &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_Compensate
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan2
</UL>

<P><STRONG><a name="[137]"></a>atan2</STRONG> (Thumb, 346 bytes, Stack size 32 bytes, atan2.o(i.atan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = atan2 &rArr; atan &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_Compensate
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_QuaternionToEuler
</UL>

<P><STRONG><a name="[132]"></a>cos</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, cos.o(i.cos), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_EulerToQuaternion
</UL>

<P><STRONG><a name="[112]"></a>sin</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, sin.o(i.sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_FixAngle
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_EulerToQuaternion
</UL>

<P><STRONG><a name="[13b]"></a>sqrt</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, sqrt.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sqrt &rArr; _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_Compensate
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMU_AHRS
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[a8]"></a>Sudoku_SolCheckVaild</STRONG> (Thumb, 122 bytes, Stack size 20 bytes, sudoku.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Sudoku_SolCheckVaild
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_RecursiveRandom
</UL>

<P><STRONG><a name="[af]"></a>Sudoku_Event_NewGame</STRONG> (Thumb, 242 bytes, Stack size 40 bytes, sudoku_event.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = Sudoku_Event_NewGame &rArr; TFTSevice_ShowDialogYesNo &rArr; TouchPanel_GetPoint &rArr; TouchPanel_Filter &rArr; Read_XPT2046 &rArr; WR_CMD
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_ShowDialogYesNo
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_Button_16x24
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_Render
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_Generate
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchPanel_GetPoint
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_RegionEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_TouchEvent_Process
</UL>

<P><STRONG><a name="[b2]"></a>Sudoku_Event_Check</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, sudoku_event.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = Sudoku_Event_Check &rArr; TFTSevice_ShowDialogYesNo &rArr; TouchPanel_GetPoint &rArr; TouchPanel_Filter &rArr; Read_XPT2046 &rArr; WR_CMD
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_ShowDialogYesNo
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_RenderCell
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_Render
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_TouchEvent_Process
</UL>

<P><STRONG><a name="[b4]"></a>Sudoku_Event_Solve</STRONG> (Thumb, 254 bytes, Stack size 32 bytes, sudoku_event.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = Sudoku_Event_Solve &rArr; TFTSevice_ShowDialogYesNo &rArr; TouchPanel_GetPoint &rArr; TouchPanel_Filter &rArr; Read_XPT2046 &rArr; WR_CMD
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_ShowDialogYesNo
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_ShowDialogOK
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_RenderCell
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_Render
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_RecursiveRandom
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_TouchEvent_Process
</UL>

<P><STRONG><a name="[b6]"></a>Sudoku_Event_Board</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, sudoku_event.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = Sudoku_Event_Board &rArr; Sudoku_RenderCell &rArr; TFT_Text_Background &rArr; TFT_Text_StringProcess &rArr; TFT_Text_PrintChar &rArr; TFT_SetPixelSafe &rArr; TFT_SetCursorSafe
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_Button_16x24
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_RenderCell
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_Event_INPUT
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_TouchEvent_Process
</UL>

<P><STRONG><a name="[b7]"></a>Sudoku_Event_INPUT</STRONG> (Thumb, 208 bytes, Stack size 32 bytes, sudoku_event.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = Sudoku_Event_INPUT &rArr; Sudoku_Event_Board &rArr; Sudoku_RenderCell &rArr; TFT_Text_Background &rArr; TFT_Text_StringProcess &rArr; TFT_Text_PrintChar &rArr; TFT_SetPixelSafe &rArr; TFT_SetCursorSafe
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_RenderCell
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_Event_Board
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_InputEvent_Process
</UL>

<P><STRONG><a name="[b9]"></a>Sudoku_Event_Hint</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, sudoku_event.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = Sudoku_Event_Hint &rArr; Sudoku_RenderCell &rArr; TFT_Text_Background &rArr; TFT_Text_StringProcess &rArr; TFT_Text_PrintChar &rArr; TFT_SetPixelSafe &rArr; TFT_SetCursorSafe
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_RenderCell
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_TouchEvent_Process
</UL>

<P><STRONG><a name="[b8]"></a>Sudoku_Event_Choice</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, sudoku_event.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = Sudoku_Event_Choice &rArr; Sudoku_RenderCell &rArr; TFT_Text_Background &rArr; TFT_Text_StringProcess &rArr; TFT_Text_PrintChar &rArr; TFT_SetPixelSafe &rArr; TFT_SetCursorSafe
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_RenderCell
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sudoku_TouchEvent_Process
</UL>

<P><STRONG><a name="[df]"></a>Bluetooth_Event_Connect</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, bluetooth_event.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = Bluetooth_Event_Connect &rArr; TFTSevice_ShowDialogYesNo &rArr; TouchPanel_GetPoint &rArr; TouchPanel_Filter &rArr; Read_XPT2046 &rArr; WR_CMD
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTService_Keyboard
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_SetPasskey
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_DevicePair
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_DeviceLink
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_DeviceCheckAuthenticated
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_DeviceBind
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Render_Main
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_ShowDialogYesNo
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_TouchEvent_Process
</UL>

<P><STRONG><a name="[e6]"></a>Bluetooth_Event_SETTINGButton</STRONG> (Thumb, 240 bytes, Stack size 24 bytes, bluetooth_event.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = Bluetooth_Event_SETTINGButton &rArr; Bluetooth_AT_SetupUART &rArr; Bluetooth_ATConfirm &rArr; TFTSevice_ShowDialogOK &rArr; TouchPanel_GetPoint &rArr; TouchPanel_Filter &rArr; Read_XPT2046 &rArr; WR_CMD
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTService_Keyboard
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Render_Setting
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_SetupUART
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_SetRole
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_SetPasskey
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_SetName
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_SetMode
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Render_Main
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Event_SETTINGProcess
</UL>

<P><STRONG><a name="[ec]"></a>Bluetooth_Event_SETTINGProcess</STRONG> (Thumb, 926 bytes, Stack size 40 bytes, bluetooth_event.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = Bluetooth_Event_SETTINGProcess &rArr; Bluetooth_Event_SETTINGButton &rArr; Bluetooth_AT_SetupUART &rArr; Bluetooth_ATConfirm &rArr; TFTSevice_ShowDialogOK &rArr; TouchPanel_GetPoint &rArr; TouchPanel_Filter &rArr; Read_XPT2046 &rArr; WR_CMD
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Render_Setting
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Event_SETTINGButton
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchPanel_GetPoint
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_RegionEvent
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_Button_08x16
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Event_Button
</UL>

<P><STRONG><a name="[ed]"></a>Bluetooth_Event_Button</STRONG> (Thumb, 246 bytes, Stack size 24 bytes, bluetooth_event.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = Bluetooth_Event_Button &rArr; Bluetooth_Event_SwitchPWR &rArr; TFTSevice_ShowDialogYesNo &rArr; TouchPanel_GetPoint &rArr; TouchPanel_Filter &rArr; Read_XPT2046 &rArr; WR_CMD
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Render_Setting
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Render_Main_Terminal
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Clear_Terminal
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_Scan
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_GetInfo
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_GetDeviceName
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Event_SwitchPWR
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Event_SETTINGProcess
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Render_Status
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Render_Main
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_SwitchMode
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_Button_08x16
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_TouchEvent_Process
</UL>

<P><STRONG><a name="[f3]"></a>Bluetooth_Event_SwitchPWR</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, bluetooth_event.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = Bluetooth_Event_SwitchPWR &rArr; TFTSevice_ShowDialogYesNo &rArr; TouchPanel_GetPoint &rArr; TouchPanel_Filter &rArr; Read_XPT2046 &rArr; WR_CMD
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_SetKeyPin
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_SetPwrPin
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_GetPwrPin
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_ShowDialogYesNo
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_Event_Button
</UL>

<P><STRONG><a name="[f5]"></a>Bluetooh_AT_FindString</STRONG> (Thumb, 116 bytes, Stack size 40 bytes, bluetooth_atcmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Bluetooh_AT_FindString &rArr; Check_msTick
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_msTick
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_msTick
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooh_AT_CheckString
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_SetupUART
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_SetRole
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_SetPasskey
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_SetName
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_SetMode
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_GetInfo
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_GetDeviceName
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_DevicePair
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_DeviceLink
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_DeviceCheckAuthenticated
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_DeviceBind
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_Inquire
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_SetInquireMode
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_CancelInquire
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_InitSPP
</UL>

<P><STRONG><a name="[f6]"></a>Bluetooh_AT_CheckString</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, bluetooth_atcmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Bluetooh_AT_CheckString
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_GetInfo
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_GetDeviceName
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooth_AT_Inquire
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bluetooh_AT_FindString
</UL>

<P><STRONG><a name="[122]"></a>I2C_RegWrite</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, mpu6050.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = I2C_RegWrite &rArr; I2C_Request &rArr; I2C_BUSY_Check &rArr; I2C_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Request
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_BUSY_Check
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Set_PWR_MGMT_1
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Set_ACCEL_Config
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Set_GYRO_Config
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Set_Configuration
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Set_SMPLRT_DIV
</UL>

<P><STRONG><a name="[125]"></a>I2C_Read</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, mpu6050.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = I2C_Read &rArr; I2C_Request &rArr; I2C_BUSY_Check &rArr; I2C_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Request
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_BUSY_Check
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Get_rawMotion
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Get_rawDATA
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Set_PWR_MGMT_1
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Set_ACCEL_Config
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Set_GYRO_Config
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Set_Configuration
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Set_SMPLRT_DIV
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_GetDeviceID
</UL>

<P><STRONG><a name="[13e]"></a>Dialog_RenderText</STRONG> (Thumb, 168 bytes, Stack size 48 bytes, tftservice_dialog.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = Dialog_RenderText &rArr; TFT_Text_Background_Limit &rArr; TFT_Text_StringProcess &rArr; TFT_Text_PrintChar &rArr; TFT_SetPixelSafe &rArr; TFT_SetCursorSafe
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_Background_Limit
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawRect
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_Transparent
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawFullRect
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_ShowDialogYesNo
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_ShowDialogOK
</UL>

<P><STRONG><a name="[14c]"></a>TFT_Text_SetFont</STRONG> (Thumb, 50 bytes, Stack size 12 bytes, tftservice_text.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TFT_Text_SetFont
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_Background_Limit
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_Transparent
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_Background
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_Transparent_Limit
</UL>

<P><STRONG><a name="[14a]"></a>TFT_Text_AsciiMask</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, tftservice_text.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TFT_Text_AsciiMask
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_PrintChar
</UL>

<P><STRONG><a name="[150]"></a>TFTSevice_Keyboard_Layout</STRONG> (Thumb, 242 bytes, Stack size 20 bytes, tftservice_keyboard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TFTSevice_Keyboard_Layout
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTService_Keyboard
</UL>

<P><STRONG><a name="[151]"></a>TFTSevice_Keyboard_KeyEvent</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, tftservice_keyboard.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTService_Keyboard
</UL>

<P><STRONG><a name="[14f]"></a>TFTService_Keyboard_RenderKey</STRONG> (Thumb, 212 bytes, Stack size 32 bytes, tftservice_keyboard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = TFTService_Keyboard_RenderKey &rArr; TFT_Text_Transparent &rArr; TFT_Text_StringProcess &rArr; TFT_Text_PrintChar &rArr; TFT_SetPixelSafe &rArr; TFT_SetCursorSafe
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_Transparent
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawFullRect
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTService_Keyboard
</UL>

<P><STRONG><a name="[152]"></a>TFTService_Keyboard_Add</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, tftservice_keyboard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = TFTService_Keyboard_Add &rArr; TFT_Text_Background_Limit &rArr; TFT_Text_StringProcess &rArr; TFT_Text_PrintChar &rArr; TFT_SetPixelSafe &rArr; TFT_SetCursorSafe
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_Background_Limit
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTService_Keyboard
</UL>

<P><STRONG><a name="[153]"></a>TFTService_Keyboard_Newline</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, tftservice_keyboard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = TFTService_Keyboard_Newline &rArr; TFT_Text_Background_Limit &rArr; TFT_Text_StringProcess &rArr; TFT_Text_PrintChar &rArr; TFT_SetPixelSafe &rArr; TFT_SetCursorSafe
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_Background_Limit
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawFullRect
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTService_Keyboard
</UL>

<P><STRONG><a name="[154]"></a>TFTService_Keyboard_Del</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, tftservice_keyboard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = TFTService_Keyboard_Del &rArr; TFT_Text_Background_Limit &rArr; TFT_Text_StringProcess &rArr; TFT_Text_PrintChar &rArr; TFT_SetPixelSafe &rArr; TFT_SetCursorSafe
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Text_Background_Limit
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_DrawFullRect
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTSevice_Keyboard_GetPos
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTService_Keyboard
</UL>

<P><STRONG><a name="[155]"></a>TFTSevice_Keyboard_GetPos</STRONG> (Thumb, 70 bytes, Stack size 20 bytes, tftservice_keyboard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TFTSevice_Keyboard_GetPos
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFTService_Keyboard_Del
</UL>

<P><STRONG><a name="[15d]"></a>TFT_CtrlLinesConfig</STRONG> (Thumb, 296 bytes, Stack size 32 bytes, tft_ssd1289.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = TFT_CtrlLinesConfig &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB3PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Init
</UL>

<P><STRONG><a name="[166]"></a>TFT_FSMCConfig</STRONG> (Thumb, 104 bytes, Stack size 104 bytes, tft_ssd1289.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = TFT_FSMCConfig &rArr; FSMC_NORSRAMInit
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NORSRAMInit
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NORSRAMCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TFT_Init
</UL>

<P><STRONG><a name="[16a]"></a>RD_AD</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, tft_xpt2046.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RD_AD
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_SendData
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_ReceiveData
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_XPT2046
</UL>

<P><STRONG><a name="[170]"></a>WR_CMD</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, tft_xpt2046.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WR_CMD
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_SendData
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_ReceiveData
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_XPT2046
</UL>

<P><STRONG><a name="[1ae]"></a>SetSysClock</STRONG> (Thumb, 162 bytes, Stack size 12 bytes, system_stm32f4xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[1bb]"></a>TI2_Config</STRONG> (Thumb, 54 bytes, Stack size 20 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[1b9]"></a>TI1_Config</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, stm32f4xx_tim.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIxExternalClockConfig
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMIConfig
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[1df]"></a>_fp_digits</STRONG> (Thumb, 326 bytes, Stack size 56 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[1d7]"></a>_printf_core</STRONG> (Thumb, 1762 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vprintf
</UL>

<P><STRONG><a name="[1e1]"></a>_printf_post_padding</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[1e0]"></a>_printf_pre_padding</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
